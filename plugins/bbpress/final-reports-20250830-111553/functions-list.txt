# Functions in bbpress
includes/forums/functions.php: * for the forum to function properly.
includes/forums/functions.php:function bbp_insert_forum( $forum_data = array(), $forum_meta = array() ) {
includes/forums/functions.php: * @param string $action The requested action to compare this function to
includes/forums/functions.php:function bbp_new_forum_handler( $action = '' ) {
includes/forums/functions.php: * @param string $action The requested action to compare this function to
includes/forums/functions.php:function bbp_edit_forum_handler( $action = '' ) {
includes/forums/functions.php:function bbp_save_forum_extras( $forum_id = 0 ) {
includes/forums/functions.php:function bbp_close_forum( $forum_id = 0 ) {
includes/forums/functions.php:function bbp_open_forum( $forum_id = 0 ) {
includes/forums/functions.php:function bbp_categorize_forum( $forum_id = 0 ) {
includes/forums/functions.php:function bbp_normalize_forum( $forum_id = 0 ) {
includes/forums/functions.php:function bbp_publicize_forum( $forum_id = 0, $current_visibility = '' ) {
includes/forums/functions.php:function bbp_privatize_forum( $forum_id = 0, $current_visibility = '' ) {
includes/forums/functions.php:function bbp_hide_forum( $forum_id = 0, $current_visibility = '' ) {
includes/forums/functions.php:function bbp_repair_forum_visibility() {
includes/forums/functions.php:function bbp_remove_forum_from_all_subscriptions( $forum_id = 0 ) {
includes/forums/functions.php:function bbp_bump_forum_topic_count( $forum_id = 0, $difference = 1, $update_ancestors = true ) {
includes/forums/functions.php:function bbp_increase_forum_topic_count( $forum_id = 0 ) {
includes/forums/functions.php:function bbp_decrease_forum_topic_count( $forum_id = 0 ) {
includes/forums/functions.php:function bbp_bump_forum_topic_count_hidden( $forum_id = 0, $difference = 1, $update_ancestors = true ) {
includes/forums/functions.php:function bbp_increase_forum_topic_count_hidden( $forum_id = 0 ) {
includes/forums/functions.php:function bbp_decrease_forum_topic_count_hidden( $forum_id = 0 ) {
includes/forums/functions.php:function bbp_bump_forum_reply_count( $forum_id = 0, $difference = 1, $update_ancestors = true ) {
includes/forums/functions.php:function bbp_bump_forum_reply_count_hidden( $forum_id = 0, $difference = 1, $update_ancestors = true ) {
includes/forums/functions.php:function bbp_increase_forum_reply_count( $forum_id = 0 ) {
includes/forums/functions.php:function bbp_decrease_forum_reply_count( $forum_id = 0 ) {
includes/forums/functions.php:function bbp_increase_forum_reply_count_hidden( $forum_id = 0 ) {
includes/forums/functions.php:function bbp_decrease_forum_reply_count_hidden( $forum_id = 0 ) {
includes/forums/functions.php:function bbp_approved_unapproved_topic_update_forum_reply_count( $topic_id = 0 ) {
includes/forums/functions.php:function bbp_update_forum_last_topic_id( $forum_id = 0, $topic_id = 0 ) {
includes/forums/functions.php:function bbp_update_forum_last_reply_id( $forum_id = 0, $reply_id = 0 ) {
includes/forums/functions.php:function bbp_update_forum_last_active_id( $forum_id = 0, $active_id = 0 ) {
includes/forums/functions.php:function bbp_update_forum_last_active_time( $forum_id = 0, $new_time = '' ) {
includes/forums/functions.php:function bbp_update_forum_subforum_count( $forum_id = 0, $subforums = false ) {
includes/forums/functions.php:function bbp_update_forum_topic_count( $forum_id = 0 ) {
includes/forums/functions.php:function bbp_update_forum_topic_count_hidden( $forum_id = 0, $topic_count = false ) {
includes/forums/functions.php:function bbp_update_forum_reply_count( $forum_id = 0 ) {
includes/forums/functions.php:function bbp_update_forum_reply_count_hidden( $forum_id = 0 ) {
includes/forums/functions.php: * database to get their results. As such, this function can be costly to run
includes/forums/functions.php:function bbp_update_forum( $args = array() ) {
includes/forums/functions.php:function bbp_get_forum_statuses( $forum_id = 0 ) {
includes/forums/functions.php:function bbp_get_forum_types( $forum_id = 0 ) {
includes/forums/functions.php:function bbp_get_forum_visibilities( $forum_id = 0) {
includes/forums/functions.php:function bbp_get_public_forum_statuses() {
includes/forums/functions.php:function bbp_get_non_public_forum_statuses() {
includes/forums/functions.php:function bbp_get_hidden_forum_ids() {
includes/forums/functions.php:function bbp_get_private_forum_ids() {
includes/forums/functions.php:function bbp_get_excluded_forum_ids() {
includes/forums/functions.php:function bbp_exclude_forum_ids( $type = 'string' ) {
includes/forums/functions.php:function bbp_pre_get_posts_normalize_forum_visibility( $posts_query = null ) {
includes/forums/functions.php:function bbp_forum_query_topic_ids( $forum_id ) {
includes/forums/functions.php:function bbp_forum_query_subforum_ids( $forum_id ) {
includes/forums/functions.php:function bbp_forum_query_last_reply_id( $forum_id = 0, $topic_ids = 0 ) {
includes/forums/functions.php:function bbp_forum_enforce_hidden() {
includes/forums/functions.php:function bbp_forum_enforce_private() {
includes/forums/functions.php:function bbp_check_forum_edit() {
includes/forums/functions.php:function bbp_delete_forum_topics( $forum_id = 0 ) {
includes/forums/functions.php:function bbp_trash_forum_topics( $forum_id = 0 ) {
includes/forums/functions.php:function bbp_untrash_forum_topics( $forum_id = 0 ) {
includes/forums/functions.php: * This function is supplemental to the actual forum deletion which is
includes/forums/functions.php:function bbp_delete_forum( $forum_id = 0 ) {
includes/forums/functions.php: * This function is supplemental to the actual forum being trashed which is
includes/forums/functions.php:function bbp_trash_forum( $forum_id = 0 ) {
includes/forums/functions.php:function bbp_untrash_forum( $forum_id = 0 ) {
includes/forums/functions.php:function bbp_deleted_forum( $forum_id = 0 ) {
includes/forums/functions.php:function bbp_trashed_forum( $forum_id = 0 ) {
includes/forums/functions.php:function bbp_untrashed_forum( $forum_id = 0 ) {
includes/forums/capabilities.php:function bbp_get_forum_caps() {
includes/forums/capabilities.php:function bbp_map_forum_meta_caps( $caps = array(), $cap = '', $user_id = 0, $args = array() ) {
includes/forums/capabilities.php:function bbp_is_user_forum_moderator( $user_id = 0, $forum_id = 0 ) {
includes/forums/capabilities.php: * This function filters the return values of the following functions:
includes/forums/capabilities.php:function bbp_allow_forums_of_user( $forum_ids = array(), $user_id = 0 ) {
includes/forums/template.php:function bbp_forum_post_type() {
includes/forums/template.php:	function bbp_get_forum_post_type() {
includes/forums/template.php:function bbp_get_forum_post_type_labels() {
includes/forums/template.php:function bbp_get_forum_post_type_rewrite() {
includes/forums/template.php:function bbp_get_forum_post_type_supports() {
includes/forums/template.php:function bbp_has_forums( $args = array() ) {
includes/forums/template.php:function bbp_forums() {
includes/forums/template.php:function bbp_the_forum() {
includes/forums/template.php:function bbp_forum_id( $forum_id = 0 ) {
includes/forums/template.php:	function bbp_get_forum_id( $forum_id = 0 ) {
includes/forums/template.php:function bbp_get_forum( $forum, $output = OBJECT, $filter = 'raw' ) {
includes/forums/template.php:function bbp_forum_permalink( $forum_id = 0, $redirect_to = '' ) {
includes/forums/template.php:	function bbp_get_forum_permalink( $forum_id = 0, $redirect_to = '' ) {
includes/forums/template.php:function bbp_forum_title( $forum_id = 0 ) {
includes/forums/template.php:	function bbp_get_forum_title( $forum_id = 0 ) {
includes/forums/template.php:function bbp_forum_archive_title( $title = '' ) {
includes/forums/template.php:	function bbp_get_forum_archive_title( $title = '' ) {
includes/forums/template.php:function bbp_forum_content( $forum_id = 0 ) {
includes/forums/template.php:	function bbp_get_forum_content( $forum_id = 0 ) {
includes/forums/template.php:function bbp_forum_row_actions() {
includes/forums/template.php:function bbp_forum_last_active_id( $forum_id = 0 ) {
includes/forums/template.php:	function bbp_get_forum_last_active_id( $forum_id = 0 ) {
includes/forums/template.php:function bbp_forum_last_active_time( $forum_id = 0 ) {
includes/forums/template.php:	function bbp_get_forum_last_active_time( $forum_id = 0 ) {
includes/forums/template.php:function bbp_forum_freshness_link( $forum_id = 0) {
includes/forums/template.php:	function bbp_get_forum_freshness_link( $forum_id = 0 ) {
includes/forums/template.php:function bbp_forum_parent_id( $forum_id = 0 ) {
includes/forums/template.php:	function bbp_get_forum_parent_id( $forum_id = 0 ) {
includes/forums/template.php:function bbp_get_forum_ancestors( $forum_id = 0 ) {
includes/forums/template.php:function bbp_forum_get_subforums( $args = array() ) {
includes/forums/template.php: * @param array $args The function supports these args:
includes/forums/template.php:function bbp_list_forums( $args = array() ) {
includes/forums/template.php:function bbp_forum_subscription_link( $args = array() ) {
includes/forums/template.php:	function bbp_get_forum_subscription_link( $args = array() ) {
includes/forums/template.php:function bbp_forum_last_topic_id( $forum_id = 0 ) {
includes/forums/template.php:	function bbp_get_forum_last_topic_id( $forum_id = 0 ) {
includes/forums/template.php:function bbp_forum_last_topic_title( $forum_id = 0 ) {
includes/forums/template.php:	function bbp_get_forum_last_topic_title( $forum_id = 0 ) {
includes/forums/template.php:function bbp_forum_last_topic_permalink( $forum_id = 0 ) {
includes/forums/template.php:	function bbp_get_forum_last_topic_permalink( $forum_id = 0 ) {
includes/forums/template.php:function bbp_get_forum_last_topic_author_id( $forum_id = 0 ) {
includes/forums/template.php:function bbp_forum_last_topic_author_link( $forum_id = 0 ) {
includes/forums/template.php:	function bbp_get_forum_last_topic_author_link( $forum_id = 0 ) {
includes/forums/template.php:function bbp_forum_last_reply_id( $forum_id = 0 ) {
includes/forums/template.php:	function bbp_get_forum_last_reply_id( $forum_id = 0 ) {
includes/forums/template.php:function bbp_forum_last_reply_title( $forum_id = 0 ) {
includes/forums/template.php:	function bbp_get_forum_last_reply_title( $forum_id = 0 ) {
includes/forums/template.php:function bbp_forum_last_reply_permalink( $forum_id = 0 ) {
includes/forums/template.php:	function bbp_get_forum_last_reply_permalink( $forum_id = 0 ) {
includes/forums/template.php:function bbp_forum_last_reply_url( $forum_id = 0 ) {
includes/forums/template.php:	function bbp_get_forum_last_reply_url( $forum_id = 0 ) {
includes/forums/template.php:function bbp_forum_last_reply_author_id( $forum_id = 0 ) {
includes/forums/template.php:	function bbp_get_forum_last_reply_author_id( $forum_id = 0 ) {
includes/forums/template.php:function bbp_forum_last_reply_author_link( $forum_id = 0 ) {
includes/forums/template.php:	function bbp_get_forum_last_reply_author_link( $forum_id = 0 ) {
includes/forums/template.php:function bbp_forum_topics_link( $forum_id = 0 ) {
includes/forums/template.php:	function bbp_get_forum_topics_link( $forum_id = 0 ) {
includes/forums/template.php:function bbp_forum_subforum_count( $forum_id = 0, $integer = false ) {
includes/forums/template.php:	function bbp_get_forum_subforum_count( $forum_id = 0, $integer = false ) {
includes/forums/template.php:function bbp_forum_topic_count( $forum_id = 0, $total_count = true, $integer = false ) {
includes/forums/template.php:	function bbp_get_forum_topic_count( $forum_id = 0, $total_count = true, $integer = false ) {
includes/forums/template.php:function bbp_forum_reply_count( $forum_id = 0, $total_count = true, $integer = false ) {
includes/forums/template.php:	function bbp_get_forum_reply_count( $forum_id = 0, $total_count = true, $integer = false ) {
includes/forums/template.php:function bbp_forum_post_count( $forum_id = 0, $total_count = true, $integer = false ) {
includes/forums/template.php:	function bbp_get_forum_post_count( $forum_id = 0, $total_count = true, $integer = false ) {
includes/forums/template.php: * @since 2.6.0 bbPress (r6922) Changed function signature to add total counts
includes/forums/template.php:function bbp_forum_topic_count_hidden( $forum_id = 0, $total_count = true, $integer = null ) {
includes/forums/template.php:	 * @since 2.6.0 bbPress (r6922) Changed function signature to add total counts
includes/forums/template.php:	function bbp_get_forum_topic_count_hidden( $forum_id = 0, $total_count = true, $integer = null ) {
includes/forums/template.php:function bbp_forum_reply_count_hidden( $forum_id = 0, $total_count = true, $integer = false ) {
includes/forums/template.php:	function bbp_get_forum_reply_count_hidden( $forum_id = 0, $total_count = true, $integer = false ) {
includes/forums/template.php:function bbp_forum_status( $forum_id = 0 ) {
includes/forums/template.php:	function bbp_get_forum_status( $forum_id = 0 ) {
includes/forums/template.php:function bbp_forum_visibility( $forum_id = 0 ) {
includes/forums/template.php:	function bbp_get_forum_visibility( $forum_id = 0 ) {
includes/forums/template.php:function bbp_forum_type( $forum_id = 0 ) {
includes/forums/template.php:	function bbp_get_forum_type( $forum_id = 0 ) {
includes/forums/template.php:function bbp_is_forum_category( $forum_id = 0 ) {
includes/forums/template.php:function bbp_is_forum_open( $forum_id = 0, $check_ancestors = true ) {
includes/forums/template.php:function bbp_is_forum_closed( $forum_id = 0, $check_ancestors = true ) {
includes/forums/template.php:function bbp_is_forum_status( $forum_id, $status_name, $check_ancestors = true, $operator = 'AND' ) {
includes/forums/template.php:function bbp_is_forum_public( $forum_id = 0, $check_ancestors = true ) {
includes/forums/template.php:function bbp_is_forum_private( $forum_id = 0, $check_ancestors = true ) {
includes/forums/template.php:function bbp_is_forum_hidden( $forum_id = 0, $check_ancestors = true ) {
includes/forums/template.php:function bbp_is_forum_visibility( $forum_id, $status_name, $check_ancestors = true, $operator = 'AND' ) {
includes/forums/template.php:function bbp_forum_author_id( $forum_id = 0 ) {
includes/forums/template.php:	function bbp_get_forum_author_id( $forum_id = 0 ) {
includes/forums/template.php:function bbp_forum_author_display_name( $forum_id = 0 ) {
includes/forums/template.php:	function bbp_get_forum_author_display_name( $forum_id = 0 ) {
includes/forums/template.php:function bbp_suppress_private_forum_meta( $retval, $forum_id ) {
includes/forums/template.php:function bbp_suppress_private_author_link( $author_link = '', $args = array() ) {
includes/forums/template.php:function bbp_forum_class( $forum_id = 0, $classes = array() ) {
includes/forums/template.php:	function bbp_get_forum_class( $forum_id = 0, $classes = array() ) {
includes/forums/template.php:function bbp_single_forum_description( $args = array() ) {
includes/forums/template.php:	 * @param array $args This function supports these arguments:
includes/forums/template.php:	function bbp_get_single_forum_description( $args = array() ) {
includes/forums/template.php:function bbp_form_forum_title() {
includes/forums/template.php:	function bbp_get_form_forum_title() {
includes/forums/template.php:function bbp_form_forum_content() {
includes/forums/template.php:	function bbp_get_form_forum_content() {
includes/forums/template.php:function bbp_form_forum_moderators() {
includes/forums/template.php:	function bbp_get_form_forum_moderators() {
includes/forums/template.php:function bbp_form_forum_parent() {
includes/forums/template.php:	function bbp_get_form_forum_parent() {
includes/forums/template.php:function bbp_form_forum_type() {
includes/forums/template.php:	function bbp_get_form_forum_type() {
includes/forums/template.php:function bbp_form_forum_visibility() {
includes/forums/template.php:	function bbp_get_form_forum_visibility() {
includes/forums/template.php:function bbp_form_forum_subscribed() {
includes/forums/template.php:	function bbp_get_form_forum_subscribed() {
includes/forums/template.php: * @param $args This function supports these arguments:
includes/forums/template.php:function bbp_form_forum_type_dropdown( $args = array() ) {
includes/forums/template.php:	 * @param $args This function supports these arguments:
includes/forums/template.php:	function bbp_get_form_forum_type_dropdown( $args = array() ) {
includes/forums/template.php: * @param $args This function supports these arguments:
includes/forums/template.php:function bbp_form_forum_status_dropdown( $args = array() ) {
includes/forums/template.php:	 * @param $args This function supports these arguments:
includes/forums/template.php:	function bbp_get_form_forum_status_dropdown( $args = array() ) {
includes/forums/template.php: * @param $args This function supports these arguments:
includes/forums/template.php:function bbp_form_forum_visibility_dropdown( $args = array() ) {
includes/forums/template.php:	 * @param $args This function supports these arguments:
includes/forums/template.php:	function bbp_get_form_forum_visibility_dropdown( $args = array() ) {
includes/forums/template.php:function bbp_is_forum_form_post_request() {
includes/forums/template.php:function bbp_forum_topics_feed_link( $forum_id = 0 ) {
includes/forums/template.php:	function bbp_get_forum_topics_feed_link( $forum_id = 0 ) {
includes/forums/template.php:function bbp_forum_replies_feed_link( $forum_id = 0 ) {
includes/forums/template.php:	function bbp_get_forum_replies_feed_link( $forum_id = 0 ) {
includes/extend/buddypress/functions.php:function bbp_get_component_name() {
includes/extend/buddypress/functions.php:function bbp_filter_user_id( $user_id = 0, $displayed_user_fallback = true, $current_user_fallback = false ) {
includes/extend/buddypress/functions.php: * Filter the bbPress is_single_user function with BuddyPress equivalent
includes/extend/buddypress/functions.php:function bbp_filter_is_single_user( $is = false ) {
includes/extend/buddypress/functions.php: * Filter the bbPress is_user_home function with BuddyPress equivalent
includes/extend/buddypress/functions.php:function bbp_filter_is_user_home( $is = false ) {
includes/extend/buddypress/functions.php:function bbp_filter_modify_page_title( $new_title = '', $old_title = '', $sep = '' ) {
includes/extend/buddypress/functions.php:function bbp_member_forums_screen_topics() {
includes/extend/buddypress/functions.php:function bbp_member_forums_screen_replies() {
includes/extend/buddypress/functions.php:function bbp_member_forums_screen_engagements() {
includes/extend/buddypress/functions.php:function bbp_member_forums_screen_favorites() {
includes/extend/buddypress/functions.php:function bbp_member_forums_screen_subscriptions() {
includes/extend/buddypress/functions.php:function bbp_member_forums_topics_content() {
includes/extend/buddypress/functions.php:function bbp_member_forums_replies_content() {
includes/extend/buddypress/functions.php:function bbp_member_forums_engagements_content() {
includes/extend/buddypress/functions.php:function bbp_member_forums_favorites_content() {
includes/extend/buddypress/functions.php:function bbp_member_forums_subscriptions_content() {
includes/extend/buddypress/functions.php:function bbp_maybe_delete_group_forum_root( $forum_id = 0 ) {
includes/extend/buddypress/functions.php:function bbp_maybe_create_group_forum_root() {
includes/extend/buddypress/functions.php:function bbp_get_group_forum_ids( $group_id = 0 ) {
includes/extend/buddypress/functions.php:function bbp_get_forum_group_ids( $forum_id = 0 ) {
includes/extend/buddypress/functions.php:function bbp_update_group_forum_ids( $group_id = 0, $forum_ids = array() ) {
includes/extend/buddypress/functions.php:function bbp_update_forum_group_ids( $forum_id = 0, $group_ids = array() ) {
includes/extend/buddypress/functions.php:function bbp_add_group_id_to_forum( $forum_id = 0, $group_id = 0 ) {
includes/extend/buddypress/functions.php:function bbp_add_forum_id_to_group( $group_id = 0, $forum_id = 0 ) {
includes/extend/buddypress/functions.php:function bbp_remove_group_id_from_forum( $forum_id = 0, $group_id = 0 ) {
includes/extend/buddypress/functions.php:function bbp_remove_forum_id_from_group( $group_id = 0, $forum_id = 0 ) {
includes/extend/buddypress/functions.php:function bbp_remove_group_id_from_all_forums( $group_id = 0 ) {
includes/extend/buddypress/functions.php:function bbp_remove_forum_id_from_all_groups( $forum_id = 0 ) {
includes/extend/buddypress/functions.php:function bbp_is_forum_group_forum( $forum_id = 0 ) {
includes/extend/buddypress/functions.php:function bbp_group_is_admin() {
includes/extend/buddypress/functions.php:function bbp_group_is_mod() {
includes/extend/buddypress/functions.php:function bbp_group_is_member() {
includes/extend/buddypress/functions.php:function bbp_group_is_banned() {
includes/extend/buddypress/functions.php:function bbp_group_is_creator() {
includes/extend/buddypress/functions.php:function bbp_get_activity_actions() {
includes/extend/buddypress/functions.php: * Generic function to format the dynamic BuddyPress activity action for new
includes/extend/buddypress/functions.php:function bbp_format_activity_action_new_post( $type = '', $action = '', $activity = false ) {
includes/extend/buddypress/functions.php:function bbp_format_activity_action_new_topic( $action, $activity ) {
includes/extend/buddypress/functions.php:function bbp_format_activity_action_new_reply( $action, $activity ) {
includes/extend/buddypress/loader.php:	public function __construct() {
includes/extend/buddypress/loader.php:	public function includes( $includes = array() ) {
includes/extend/buddypress/loader.php:	public function setup_globals( $args = array() ) {
includes/extend/buddypress/loader.php:	public function setup_actions() {
includes/extend/buddypress/loader.php:	public function setup_components() {
includes/extend/buddypress/loader.php:	private function fully_loaded() {
includes/extend/buddypress/loader.php:	public function setup_nav( $main_nav = array(), $sub_nav = array() ) {
includes/extend/buddypress/loader.php:	public function setup_admin_bar( $wp_admin_nav = array() ) {
includes/extend/buddypress/loader.php:	public function setup_title() {
includes/extend/buddypress/members.php:	public function __construct() {
includes/extend/buddypress/members.php:	private function setup_actions() {
includes/extend/buddypress/members.php:	private function setup_filters() {
includes/extend/buddypress/members.php:	private function fully_loaded() {
includes/extend/buddypress/members.php:	public function get_user_profile_url( $user_id = 0 ) {
includes/extend/buddypress/members.php:	public function get_topics_created_url( $user_id = 0 ) {
includes/extend/buddypress/members.php:	public function get_replies_created_url( $user_id = 0 ) {
includes/extend/buddypress/members.php:	public function get_favorites_permalink( $user_id = 0 ) {
includes/extend/buddypress/members.php:	public function get_subscriptions_permalink( $user_id = 0 ) {
includes/extend/buddypress/members.php:	public function get_engagements_permalink( $user_id = 0 ) {
includes/extend/buddypress/members.php:	public function set_member_forum_query_vars() {
includes/extend/buddypress/members.php:	private function get_profile_url( $user_id = 0, $slug = '' ) {
includes/extend/buddypress/notifications.php:function bbp_filter_notifications_get_registered_components( $component_names = array() ) {
includes/extend/buddypress/notifications.php:function bbp_format_buddypress_notifications( $content, $item_id, $secondary_item_id, $action_item_count, $format, $component_action_name, $component_name, $id ) {
includes/extend/buddypress/notifications.php:function bbp_buddypress_add_notification( $reply_id = 0, $topic_id = 0, $forum_id = 0, $anonymous_data = array(), $author_id = 0, $is_edit = false, $reply_to = 0 ) {
includes/extend/buddypress/notifications.php:function bbp_buddypress_mark_notifications( $action = '' ) {
includes/extend/buddypress/activity.php:	public function __construct() {
includes/extend/buddypress/activity.php:	private function setup_globals() {
includes/extend/buddypress/activity.php:	private function setup_actions() {
includes/extend/buddypress/activity.php:	private function setup_filters() {
includes/extend/buddypress/activity.php:	private function fully_loaded() {
includes/extend/buddypress/activity.php:	public function register_activity_actions() {
includes/extend/buddypress/activity.php:	private function record_activity( $args = array() ) {
includes/extend/buddypress/activity.php:	public function delete_activity( $args = array() ) {
includes/extend/buddypress/activity.php:	private static function get_activity_id( $post_id = 0 ) {
includes/extend/buddypress/activity.php:	public function activity_can_comment( $can_comment = true ) {
includes/extend/buddypress/activity.php:	public function activity_get_permalink( $link = '', $activity_object = false ) {
includes/extend/buddypress/activity.php:	public function topic_create( $topic_id = 0, $forum_id = 0, $anonymous_data = array(), $topic_author_id = 0 ) {
includes/extend/buddypress/activity.php:	public function topic_delete( $topic_id = 0 ) {
includes/extend/buddypress/activity.php:	public function topic_update( $topic_id = 0, $post = null ) {
includes/extend/buddypress/activity.php:	public function reply_create( $reply_id = 0, $topic_id = 0, $forum_id = 0, $anonymous_data = array(), $reply_author_id = 0 ) {
includes/extend/buddypress/activity.php:	public function reply_delete( $reply_id ) {
includes/extend/buddypress/activity.php:	public function reply_update( $reply_id, $post ) {
includes/extend/buddypress/groups.php:	public function __construct() {
includes/extend/buddypress/groups.php:	private function setup_variables() {
includes/extend/buddypress/groups.php:	private function setup_actions() {
includes/extend/buddypress/groups.php:	private function setup_filters() {
includes/extend/buddypress/groups.php:		// Map assorted template function permalinks
includes/extend/buddypress/groups.php:	private function fully_loaded() {
includes/extend/buddypress/groups.php:	public function is_single_forum( $retval = false ) {
includes/extend/buddypress/groups.php:	public function is_single_topic( $retval = false ) {
includes/extend/buddypress/groups.php:	 * The primary display function for group forums
includes/extend/buddypress/groups.php:	public function display( $group_id = null ) {
includes/extend/buddypress/groups.php:	public function maybe_unset_forum_menu() {
includes/extend/buddypress/groups.php:	public function map_group_forum_meta_caps( $caps = array(), $cap = '', $user_id = 0, $args = array() ) {
includes/extend/buddypress/groups.php:	public function remove_group_forum_meta_cap_map() {
includes/extend/buddypress/groups.php:	public function validate_topic_forum_id( $topic_id = 0 ) {
includes/extend/buddypress/groups.php:	public function validate_reply_to_id( $reply_id = 0 ) {
includes/extend/buddypress/groups.php:	public function edit_screen( $group = false ) {
includes/extend/buddypress/groups.php:	public function edit_screen_save( $group_id = 0 ) {
includes/extend/buddypress/groups.php:	public function group_admin_ui_edit_screen() {
includes/extend/buddypress/groups.php:	public function group_admin_ui_display_metabox( $item ) {
includes/extend/buddypress/groups.php:	public function create_screen( $group_id = 0 ) {
includes/extend/buddypress/groups.php:	public function create_screen_save( $group_id = 0 ) {
includes/extend/buddypress/groups.php:	public function ob_start() {
includes/extend/buddypress/groups.php:	public function ob_end_clean() {
includes/extend/buddypress/groups.php:	public function new_forum( $forum_args = array() ) {
includes/extend/buddypress/groups.php:	public function remove_forum( $forum_args = array() ) {
includes/extend/buddypress/groups.php:	public function disconnect_forum_from_group( $group_id = 0 ) {
includes/extend/buddypress/groups.php:	public static function update_group_forum( BP_Groups_Group $group ) {
includes/extend/buddypress/groups.php:	public function toggle_group_forum( $group_id = 0, $enabled = false ) {
includes/extend/buddypress/groups.php:	public function display_forums( $offset = 0 ) {
includes/extend/buddypress/groups.php:	public function no_super_stickies( $super = array() ) {
includes/extend/buddypress/groups.php:	public function unset_super_sticky( $args = array() ) {
includes/extend/buddypress/groups.php:	public function hide_super_sticky_admin_link( $retval = '', $args = array() ) {
includes/extend/buddypress/groups.php:	public function new_topic_redirect_to( $redirect_url = '', $redirect_to = '', $topic_id = 0 ) {
includes/extend/buddypress/groups.php:	public function new_reply_redirect_to( $redirect_url = '', $redirect_to = '', $reply_id = 0 ) {
includes/extend/buddypress/groups.php:	public function edit_redirect_to( $redirect_url = '' ) {
includes/extend/buddypress/groups.php:	public function forum_parent() {
includes/extend/buddypress/groups.php:	public function topic_parent() {
includes/extend/buddypress/groups.php:	public function form_permissions( $retval = false ) {
includes/extend/buddypress/groups.php:	public function group_settings_hidden_field() {
includes/extend/buddypress/groups.php:	private function group_url( $group_id = 0 ) {
includes/extend/buddypress/groups.php:	private function group_manage_url( $group_id = 0 ) {
includes/extend/buddypress/groups.php:	private function maybe_map_permalink_to_group( $post_id = 0, $url = false ) {
includes/extend/buddypress/groups.php:	public function map_forum_permalink_to_group( $url, $forum_id ) {
includes/extend/buddypress/groups.php:	public function map_topic_permalink_to_group( $url, $topic_id ) {
includes/extend/buddypress/groups.php:	public function map_reply_permalink_to_group( $url, $reply_id ) {
includes/extend/buddypress/groups.php:	public function map_reply_edit_url_to_group( $url, $reply_id ) {
includes/extend/buddypress/groups.php:	public function post_link( $url, $post ) {
includes/extend/buddypress/groups.php:	public function page_link( $url, $post_id ) {
includes/extend/buddypress/groups.php:	public function post_type_link( $url, $post ) {
includes/extend/buddypress/groups.php:	public function topic_pagination( $args ) {
includes/extend/buddypress/groups.php:	public function replies_pagination( $args ) {
includes/extend/buddypress/groups.php:    public function rewrite_pagination( $object, $type = '' ) {
includes/extend/buddypress/groups.php:	public function redirect_canonical() {
includes/extend/buddypress/groups.php:	public function map_activity_to_group( $args = array() ) {
includes/extend/akismet.php:	public function __construct() {
includes/extend/akismet.php:	private function setup_actions() {
includes/extend/akismet.php:			foreach ( $functions as $function => $priority ) {
includes/extend/akismet.php:	public function check_post( $post_data = array() ) {
includes/extend/akismet.php:	private function parse_response( $post_data = array() ) {
includes/extend/akismet.php:	public function submit_post( $post_id = 0 ) {
includes/extend/akismet.php:	private function maybe_spam( $post_data = array(), $check = 'check', $spam = 'spam' ) {
includes/extend/akismet.php:	public function update_post_meta( $post_id = 0, $_post = false ) {
includes/extend/akismet.php:	private function update_post_history( $post_id = 0, $message = null, $event = null ) {
includes/extend/akismet.php:	public function get_post_history( $post_id = 0 ) {
includes/extend/akismet.php:	public function filter_post_terms( $terms = '', $topic_id = 0, $reply_id = 0 ) {
includes/extend/akismet.php:	 * This code is directly taken from the akismet_http_post() function and
includes/extend/akismet.php:	private function http_post( $request, $host, $path, $port = 80, $ip = '' ) {
includes/extend/akismet.php:	private function get_response( $host_and_path = '', $http_args = array() ) {
includes/extend/akismet.php:	private function get_user_roles( $user_id = 0 ) {
includes/extend/akismet.php:	public function add_metaboxes() {
includes/extend/akismet.php:	public function history_metabox() {
includes/extend/akismet.php:	public function get_delete_limit( $filter = '' ) {
includes/extend/akismet.php:	public function get_delete_interval( $filter = '' ) {
includes/extend/akismet.php:	public function delete_old_spam() {
includes/extend/akismet.php:	public function delete_old_spam_meta() {
includes/extend/akismet.php:	public function delete_orphaned_spam_meta() {
includes/extend/akismet.php:	private function maybe_optimize_postmeta() {
includes/core/functions.php:function bbp_version() {
includes/core/functions.php:	function bbp_get_version() {
includes/core/functions.php:function bbp_asset_version() {
includes/core/functions.php:	function bbp_get_asset_version() {
includes/core/functions.php:function bbp_db_version() {
includes/core/functions.php:	function bbp_get_db_version() {
includes/core/functions.php:function bbp_db_version_raw() {
includes/core/functions.php:	function bbp_get_db_version_raw() {
includes/core/functions.php:function bbp_update_forum_id( $post_id = 0, $forum_id = 0 ) {
includes/core/functions.php:function bbp_update_topic_id( $post_id = 0, $topic_id = 0 ) {
includes/core/functions.php:function bbp_update_reply_id( $post_id = 0, $reply_id = 0 ) {
includes/core/functions.php:function bbp_update_reply_to_id( $post_id = 0, $reply_id = 0 ) {
includes/core/functions.php:function bbp_get_views() {
includes/core/functions.php:function bbp_register_view( $view, $title, $query_args = '', $feed = true, $capability = '' ) {
includes/core/functions.php:function bbp_deregister_view( $view ) {
includes/core/functions.php:function bbp_view_query( $view = '', $new_args = '' ) {
includes/core/functions.php:function bbp_get_view_query_args( $view = '' ) {
includes/core/functions.php:function bbp_add_error( $code = '', $message = '', $data = '' ) {
includes/core/functions.php:function bbp_has_errors() {
includes/core/functions.php: * Moved into its own function to allow filtering of the regex pattern
includes/core/functions.php:function bbp_find_mentions_pattern() {
includes/core/functions.php:function bbp_find_mentions( $content = '' ) {
includes/core/functions.php:function bbp_mention_filter( $content = '' ) {
includes/core/functions.php:function bbp_get_public_status_id() {
includes/core/functions.php:function bbp_get_pending_status_id() {
includes/core/functions.php:function bbp_get_private_status_id() {
includes/core/functions.php:function bbp_get_hidden_status_id() {
includes/core/functions.php:function bbp_get_closed_status_id() {
includes/core/functions.php:function bbp_get_spam_status_id() {
includes/core/functions.php:function bbp_get_trash_status_id() {
includes/core/functions.php:function bbp_get_orphan_status_id() {
includes/core/functions.php:function bbp_get_user_rewrite_id() {
includes/core/functions.php:function bbp_get_edit_rewrite_id() {
includes/core/functions.php:function bbp_get_search_rewrite_id() {
includes/core/functions.php:function bbp_get_user_topics_rewrite_id() {
includes/core/functions.php:function bbp_get_user_replies_rewrite_id() {
includes/core/functions.php:function bbp_get_user_favorites_rewrite_id() {
includes/core/functions.php:function bbp_get_user_subscriptions_rewrite_id() {
includes/core/functions.php:function bbp_get_user_engagements_rewrite_id() {
includes/core/functions.php:function bbp_get_view_rewrite_id() {
includes/core/functions.php:function bbp_get_paged_rewrite_id() {
includes/core/functions.php:function bbp_delete_rewrite_rules() {
includes/core/functions.php:function bbp_is_post_request() {
includes/core/functions.php:function bbp_is_get_request() {
includes/core/functions.php:function bbp_redirect( $location = '', $status = 302 ) {
includes/core/functions.php:function bbp_doing_script_debug() {
includes/core/functions.php:function bbp_doing_autosave() {
includes/core/update.php:function bbp_is_install() {
includes/core/update.php:function bbp_is_update() {
includes/core/update.php: * Note that this function currently is not used in bbPress core and is here
includes/core/update.php:function bbp_is_activation( $basename = '' ) {
includes/core/update.php:function bbp_is_deactivation( $basename = '' ) {
includes/core/update.php:function bbp_version_bump() {
includes/core/update.php:function bbp_setup_updater() {
includes/core/update.php:function bbp_setup_new_site( $site_id = 0 ) {
includes/core/update.php:function bbp_create_initial_content( $args = array() ) {
includes/core/update.php:function bbp_version_updater() {
includes/core/update.php:function bbp_add_activation_redirect() {
includes/core/update.php:function bbp_do_activation_redirect() {
includes/core/update.php: * Hooked to the 'bbp_activate' action, this helper function automatically makes
includes/core/update.php:function bbp_make_current_user_keymaster() {
includes/core/update.php:function bbp_get_pending_upgrade_count( $type = '' ) {
includes/core/update.php:function bbp_get_pending_upgrades( $type = '' ) {
includes/core/update.php:function bbp_add_pending_upgrade( $upgrade_id = '' ) {
includes/core/update.php:function bbp_remove_pending_upgrade( $upgrade_id = '' ) {
includes/core/update.php:function bbp_clear_pending_upgrades() {
includes/core/update.php:function bbp_maybe_append_pending_upgrade_count( $string = '', $type = '' ) {
includes/core/filters.php:function _bbp_filter_locale( $locale = '', $domain = '' ) {
includes/core/filters.php:function _bbp_has_forums_query( $args = array() ) {
includes/core/filters.php:function _bbp_has_topics_query( $args = array() ) {
includes/core/filters.php:function _bbp_has_replies_query( $args = array() ) {
includes/core/sub-actions.php:function bbp_activation() {
includes/core/sub-actions.php:function bbp_deactivation() {
includes/core/sub-actions.php:function bbp_uninstall() {
includes/core/sub-actions.php:function bbp_loaded() {
includes/core/sub-actions.php:function bbp_constants() {
includes/core/sub-actions.php:function bbp_boot_strap_globals() {
includes/core/sub-actions.php:function bbp_includes() {
includes/core/sub-actions.php:function bbp_setup_globals() {
includes/core/sub-actions.php:function bbp_register() {
includes/core/sub-actions.php:function bbp_init() {
includes/core/sub-actions.php:function bbp_roles_init( $wp_roles ) {
includes/core/sub-actions.php:function bbp_widgets_init() {
includes/core/sub-actions.php:function bbp_setup_current_user() {
includes/core/sub-actions.php:function bbp_setup_engagements() {
includes/core/sub-actions.php:function bbp_load_textdomain() {
includes/core/sub-actions.php:function bbp_register_post_types() {
includes/core/sub-actions.php:function bbp_register_post_statuses() {
includes/core/sub-actions.php:function bbp_register_taxonomies() {
includes/core/sub-actions.php:function bbp_register_views() {
includes/core/sub-actions.php:function bbp_register_shortcodes() {
includes/core/sub-actions.php:function bbp_register_meta() {
includes/core/sub-actions.php:function bbp_enqueue_scripts() {
includes/core/sub-actions.php:function bbp_add_rewrite_tags() {
includes/core/sub-actions.php:function bbp_add_rewrite_rules() {
includes/core/sub-actions.php:function bbp_add_permastructs() {
includes/core/sub-actions.php:function bbp_login_form_login() {
includes/core/sub-actions.php:function bbp_transition_post_status( $new_status = '', $old_status = '', $post = false ) {
includes/core/sub-actions.php:function bbp_profile_update( $user_id = 0, $old_user_data = array() ) {
includes/core/sub-actions.php:function bbp_user_register( $user_id = 0 ) {
includes/core/sub-actions.php:function bbp_ready() {
includes/core/sub-actions.php:function bbp_template_redirect() {
includes/core/sub-actions.php:function bbp_register_theme_packages() {
includes/core/sub-actions.php:function bbp_setup_theme() {
includes/core/sub-actions.php:function bbp_after_setup_theme() {
includes/core/sub-actions.php:function bbp_post_request() {
includes/core/sub-actions.php:function bbp_get_request() {
includes/core/sub-actions.php:function bbp_plugin_locale( $locale = '', $domain = '' ) {
includes/core/sub-actions.php:function bbp_request( $query_vars = array() ) {
includes/core/sub-actions.php:function bbp_template_include( $template = '' ) {
includes/core/sub-actions.php:function bbp_generate_rewrite_rules( $wp_rewrite ) {
includes/core/sub-actions.php:function bbp_allowed_themes( $themes ) {
includes/core/sub-actions.php:function bbp_map_meta_caps( $caps = array(), $cap = '', $user_id = 0, $args = array() ) {
includes/core/sub-actions.php:function bbp_mail( $args = array() ) {
includes/core/cache.php:	public function __construct() {
includes/core/cache.php:	public function pre_post_update( $post_id = 0 ) {
includes/core/cache.php:	public function skip_related_posts( $post_id = 0 ) {
includes/core/cache.php:	public function restore_cache_invalidation() {
includes/core/cache.php:function bbp_clean_post_cache( $post_id = null, $post = null ) {
includes/core/extend.php:function bbp_setup_akismet() {
includes/core/extend.php:function bbp_setup_buddypress() {
includes/core/extend.php:		function buddypress() {
includes/core/capabilities.php:function bbp_get_caps_for_role( $role = '' ) {
includes/core/capabilities.php:function bbp_add_caps() {
includes/core/capabilities.php:function bbp_remove_caps() {
includes/core/capabilities.php:function bbp_get_blog_roles() {
includes/core/capabilities.php:function bbp_add_forums_roles( $wp_roles = null ) {
includes/core/capabilities.php: * Helper function to add filter to option_wp_user_roles
includes/core/capabilities.php:function bbp_filter_user_roles_option() {
includes/core/capabilities.php:function _bbp_reinit_dynamic_roles( $roles = array() ) {
includes/core/capabilities.php: * Simple function who's main purpose is to allow filtering of the
includes/core/capabilities.php:function bbp_get_dynamic_roles() {
includes/core/capabilities.php:function bbp_get_dynamic_role_name( $role_id = '' ) {
includes/core/capabilities.php:function bbp_filter_blog_editable_roles( $all_roles = array() ) {
includes/core/capabilities.php:function bbp_get_keymaster_role() {
includes/core/capabilities.php:function bbp_get_moderator_role() {
includes/core/capabilities.php:function bbp_get_participant_role() {
includes/core/capabilities.php:function bbp_get_spectator_role() {
includes/core/capabilities.php:function bbp_get_blocked_role() {
includes/core/capabilities.php:function bbp_add_roles() {
includes/core/capabilities.php:function bbp_remove_roles() {
includes/core/template-loader.php:function bbp_template_include_theme_supports( $template = '' ) {
includes/core/template-loader.php:function bbp_set_template_included( $template = false ) {
includes/core/template-loader.php:function bbp_is_template_included() {
includes/core/template-loader.php:function bbp_load_theme_functions() {
includes/core/template-loader.php:function bbp_get_single_user_template() {
includes/core/template-loader.php:function bbp_get_single_user_edit_template() {
includes/core/template-loader.php:function bbp_get_favorites_template() {
includes/core/template-loader.php:function bbp_get_subscriptions_template() {
includes/core/template-loader.php:function bbp_get_single_view_template() {
includes/core/template-loader.php:function bbp_get_search_template() {
includes/core/template-loader.php:function bbp_get_single_forum_template() {
includes/core/template-loader.php:function bbp_get_forum_archive_template() {
includes/core/template-loader.php:function bbp_get_forum_edit_template() {
includes/core/template-loader.php:function bbp_get_single_topic_template() {
includes/core/template-loader.php:function bbp_get_topic_archive_template() {
includes/core/template-loader.php:function bbp_get_topic_edit_template() {
includes/core/template-loader.php:function bbp_get_topic_split_template() {
includes/core/template-loader.php:function bbp_get_topic_merge_template() {
includes/core/template-loader.php:function bbp_get_single_reply_template() {
includes/core/template-loader.php:function bbp_get_reply_edit_template() {
includes/core/template-loader.php:function bbp_get_reply_move_template() {
includes/core/template-loader.php:function bbp_get_topic_tag_template() {
includes/core/template-loader.php:function bbp_get_topic_tag_edit_template() {
includes/core/template-loader.php:function bbp_get_theme_compat_templates() {
includes/core/options.php:function bbp_get_default_options() {
includes/core/options.php:function bbp_add_options() {
includes/core/options.php:function bbp_delete_options() {
includes/core/options.php:function bbp_setup_option_filters() {
includes/core/options.php: * This function should not be called directly.
includes/core/options.php:function bbp_filter_pre_get_option( $value = false, $option = '' ) {
includes/core/options.php: * This function should not be called directly.
includes/core/options.php:function bbp_filter_default_option( $default = false, $option = '', $passed_default = false ) {
includes/core/options.php:function bbp_pre_load_options() {
includes/core/options.php:function bbp_is_favorites_active( $default = 1 ) {
includes/core/options.php:function bbp_is_subscriptions_active( $default = 1 ) {
includes/core/options.php:function bbp_is_engagements_active( $default = 1 ) {
includes/core/options.php:function bbp_allow_content_edit( $default = 1 ) {
includes/core/options.php:function bbp_allow_content_throttle( $default = 1 ) {
includes/core/options.php:function bbp_allow_topic_tags( $default = 1 ) {
includes/core/options.php:function bbp_allow_forum_mods( $default = 1 ) {
includes/core/options.php:function bbp_allow_super_mods( $default = 0 ) {
includes/core/options.php:function bbp_allow_search( $default = 1 ) {
includes/core/options.php:function bbp_allow_threaded_replies( $default = 0 ) {
includes/core/options.php:function bbp_thread_replies_depth( $default = 2 ) {
includes/core/options.php:function bbp_allow_revisions( $default = 1 ) {
includes/core/options.php:function bbp_allow_anonymous( $default = 0 ) {
includes/core/options.php:function bbp_allow_global_access( $default = 1 ) {
includes/core/options.php:function bbp_get_default_role( $default = 'bbp_participant' ) {
includes/core/options.php:function bbp_use_wp_editor( $default = 1 ) {
includes/core/options.php:function bbp_use_autoembed( $default = 1 ) {
includes/core/options.php:function bbp_get_theme_package_id( $default = 'default' ) {
includes/core/options.php:function bbp_title_max_length( $default = 80 ) {
includes/core/options.php:	function bbp_get_title_max_length( $default = 80 ) {
includes/core/options.php:function bbp_edit_lock( $default = 5 ) {
includes/core/options.php:	function bbp_get_edit_lock( $default = 5 ) {
includes/core/options.php:function bbp_group_forums_root_id( $default = 0 ) {
includes/core/options.php:	function bbp_get_group_forums_root_id( $default = 0 ) {
includes/core/options.php:function bbp_is_group_forums_active( $default = 1 ) {
includes/core/options.php:function bbp_is_akismet_active( $default = 1 ) {
includes/core/options.php:function bbp_settings_integration( $default = 'basic' ) {
includes/core/options.php:function bbp_engagements_strategy( $default = 'meta' ) {
includes/core/options.php:function bbp_get_root_slug( $default = 'forums' ) {
includes/core/options.php:function bbp_include_root_slug( $default = 1 ) {
includes/core/options.php:function bbp_show_on_root( $default = 'forums' ) {
includes/core/options.php:function bbp_maybe_get_root_slug() {
includes/core/options.php:function bbp_get_forum_slug( $default = 'forum' ) {
includes/core/options.php:function bbp_get_topic_archive_slug( $default = 'topics' ) {
includes/core/options.php:function bbp_get_reply_archive_slug( $default = 'replies' ) {
includes/core/options.php:function bbp_get_topic_slug( $default = 'topic' ) {
includes/core/options.php:function bbp_get_topic_tag_tax_slug( $default = 'topic-tag' ) {
includes/core/options.php:function bbp_get_reply_slug( $default = 'reply' ) {
includes/core/options.php:function bbp_get_user_slug( $default = 'users' ) {
includes/core/options.php:function bbp_get_user_favorites_slug( $default = 'favorites' ) {
includes/core/options.php:function bbp_get_user_subscriptions_slug( $default = 'subscriptions' ) {
includes/core/options.php:function bbp_get_user_engagements_slug( $default = 'engagements' ) {
includes/core/options.php:function bbp_get_view_slug( $default = 'view' ) {
includes/core/options.php:function bbp_get_search_slug( $default = 'search' ) {
includes/core/options.php:function bbp_get_edit_slug( $default = 'edit' ) {
includes/core/options.php:function bbp_get_config_location( $default = '' ) {
includes/core/abstraction.php:function bbp_setup_admin() {
includes/core/abstraction.php:function bbp_setup_converter() {
includes/core/abstraction.php:function bbp_get_global_object( $name = '', $type = '', $default = null ) {
includes/core/abstraction.php:function bbp_get_wp_query() {
includes/core/abstraction.php:function bbp_get_wp_roles() {
includes/core/abstraction.php: * This function is abstracted to avoid global touches to the primary database
includes/core/abstraction.php:function bbp_db() {
includes/core/abstraction.php: * This function is abstracted to avoid global touches to the primary rewrite
includes/core/abstraction.php:function bbp_rewrite() {
includes/core/abstraction.php:function bbp_get_root_url() {
includes/core/abstraction.php:function bbp_get_paged_slug() {
includes/core/abstraction.php:function bbp_use_pretty_urls() {
includes/core/abstraction.php:function bbp_make_first_page_canonical( $pagination_links = '' ) {
includes/core/abstraction.php:function bbp_paginate_links( $args = array() ) {
includes/core/abstraction.php:function bbp_get_major_wp_version() {
includes/core/abstraction.php:function bbp_is_large_install() {
includes/core/abstraction.php:	// Multisite has a function specifically for this
includes/core/abstraction.php:function bbp_get_total_users() {
includes/core/abstraction.php:function bbp_switch_to_site( $site_id = 0 ) {
includes/core/abstraction.php:function bbp_restore_current_site() {
includes/core/abstraction.php:function bbp_default_intercept() {
includes/core/abstraction.php:function bbp_is_intercepted( $value = '' ) {
includes/core/abstraction.php: * Allow interception of a method or function call.
includes/core/abstraction.php: * @param array  $args   Typically the results of caller function func_get_args()
includes/core/abstraction.php:function bbp_maybe_intercept( $action = '', $args = array() ) {
includes/core/abstraction.php:function bbp_get_empty_datetime() {
includes/core/theme-compat.php:	public function __construct( Array $properties = array() ) {
includes/core/theme-compat.php:	public function __set( $property, $value ) {
includes/core/theme-compat.php:	public function __get( $property ) {
includes/core/theme-compat.php:	public function get_dir() {
includes/core/theme-compat.php:function bbp_setup_theme_compat( $theme = 'default' ) {
includes/core/theme-compat.php:function bbp_get_current_template_pack() {
includes/core/theme-compat.php:function bbp_get_theme_compat_id() {
includes/core/theme-compat.php:function bbp_get_theme_compat_name() {
includes/core/theme-compat.php:function bbp_get_theme_compat_version() {
includes/core/theme-compat.php:function bbp_get_theme_compat_dir() {
includes/core/theme-compat.php:function bbp_get_theme_compat_url() {
includes/core/theme-compat.php:function bbp_is_theme_compat_active() {
includes/core/theme-compat.php:function bbp_set_theme_compat_active( $set = true ) {
includes/core/theme-compat.php:function bbp_set_theme_compat_templates( $templates = array() ) {
includes/core/theme-compat.php:function bbp_set_theme_compat_template( $template = '' ) {
includes/core/theme-compat.php:function bbp_set_theme_compat_original_template( $template = '' ) {
includes/core/theme-compat.php:function bbp_is_theme_compat_original_template( $template = '' ) {
includes/core/theme-compat.php:function bbp_register_theme_package( $theme = array(), $override = true ) {
includes/core/theme-compat.php: * This fun little function fills up some WordPress globals with dummy data to
includes/core/theme-compat.php:function bbp_theme_compat_reset_post( $args = array() ) {
includes/core/theme-compat.php:function bbp_template_include_theme_compat( $template = '' ) {
includes/core/theme-compat.php:	 * our own function into it, which runs a series of checks to determine
includes/core/theme-compat.php:function bbp_redirect_canonical( $redirect_url ) {
includes/core/theme-compat.php:function bbp_remove_all_filters( $tag, $priority = false ) {
includes/core/theme-compat.php:function bbp_restore_all_filters( $tag, $priority = false ) {
includes/core/theme-compat.php:function bbp_force_comment_status( $open = false, $post_id = 0 ) {
includes/core/theme-compat.php:function bbp_remove_adjacent_posts() {
includes/core/template-functions.php:function bbp_get_template_part( $slug, $name = null ) {
includes/core/template-functions.php:function bbp_locate_template( $template_names, $load = false, $require_once = true ) {
includes/core/template-functions.php:function bbp_locate_enqueueable( $file = '' ) {
includes/core/template-functions.php:function bbp_urlize_enqueueable( $file = '' ) {
includes/core/template-functions.php:function bbp_enqueue_style( $handle = '', $file = '', $deps = array(), $ver = false, $media = 'all' ) {
includes/core/template-functions.php:function bbp_enqueue_script( $handle = '', $file = '', $deps = array(), $ver = false, $in_footer = false ) {
includes/core/template-functions.php: * This is really cool. This function registers a new template stack location,
includes/core/template-functions.php: * @param string $location_callback Callback function that returns the
includes/core/template-functions.php:function bbp_register_template_stack( $location_callback = '', $priority = 10 ) {
includes/core/template-functions.php: * @param string $location_callback Callback function that returns the
includes/core/template-functions.php:function bbp_deregister_template_stack( $location_callback = '', $priority = 10 ) {
includes/core/template-functions.php:function bbp_get_template_stack() {
includes/core/template-functions.php:function bbp_buffer_template_part( $slug, $name = null, $echo = true ) {
includes/core/template-functions.php:function bbp_get_query_template( $type, $templates = array() ) {
includes/core/template-functions.php:function bbp_get_template_locations( $templates = array() ) {
includes/core/template-functions.php:function bbp_add_template_stack_locations( $stacks = array() ) {
includes/core/template-functions.php:function bbp_parse_query( $posts_query ) {
includes/replies/functions.php: * for the reply to function properly.
includes/replies/functions.php:function bbp_insert_reply( $reply_data = array(), $reply_meta = array() ) {
includes/replies/functions.php:function bbp_insert_reply_update_counts( $reply_id = 0, $topic_id = 0, $forum_id = 0 ) {
includes/replies/functions.php: * @param string $action The requested action to compare this function to
includes/replies/functions.php:function bbp_new_reply_handler( $action = '' ) {
includes/replies/functions.php: * @param string $action The requested action to compare this function to
includes/replies/functions.php:function bbp_edit_reply_handler( $action = '' ) {
includes/replies/functions.php:function bbp_update_reply( $reply_id = 0, $topic_id = 0, $forum_id = 0, $anonymous_data = array(), $author_id = 0, $is_edit = false, $reply_to = 0 ) {
includes/replies/functions.php:function bbp_update_reply_walker( $reply_id, $last_active_time = '', $forum_id = 0, $topic_id = 0, $refresh = true ) {
includes/replies/functions.php:function bbp_update_reply_forum_id( $reply_id = 0, $forum_id = 0 ) {
includes/replies/functions.php:function bbp_update_reply_topic_id( $reply_id = 0, $topic_id = 0 ) {
includes/replies/functions.php:function bbp_update_reply_to( $reply_id = 0, $reply_to = 0 ) {
includes/replies/functions.php: * Because settings can be changed, this function does not care if hierarchical
includes/replies/functions.php:function bbp_get_reply_ancestors( $reply_id = 0 ) {
includes/replies/functions.php:function bbp_update_reply_revision_log( $args = array() ) {
includes/replies/functions.php: * @param string $action The requested action to compare this function to
includes/replies/functions.php:function bbp_move_reply_handler( $action = '' ) {
includes/replies/functions.php:function bbp_move_reply_count( $move_reply_id, $source_topic_id, $destination_topic_id ) {
includes/replies/functions.php: * @param string $action The requested action to compare this function to
includes/replies/functions.php:function bbp_toggle_reply_handler( $action = '' ) {
includes/replies/functions.php: * This function is used by `bbp_toggle_reply_handler()` to do the actual heavy
includes/replies/functions.php: * within that context, so if you need to call this function directly, make sure
includes/replies/functions.php:function bbp_toggle_reply( $args = array() ) {
includes/replies/functions.php:function bbp_get_reply_statuses( $reply_id = 0 ) {
includes/replies/functions.php:function bbp_get_reply_toggles( $reply_id = 0 ) {
includes/replies/functions.php:function bbp_get_public_reply_statuses() {
includes/replies/functions.php:function bbp_get_non_public_reply_statuses() {
includes/replies/functions.php:function bbp_spam_reply( $reply_id = 0 ) {
includes/replies/functions.php:function bbp_unspam_reply( $reply_id = 0 ) {
includes/replies/functions.php:function bbp_approve_reply( $reply_id = 0 ) {
includes/replies/functions.php:function bbp_unapprove_reply( $reply_id = 0 ) {
includes/replies/functions.php:function bbp_delete_reply( $reply_id = 0 ) {
includes/replies/functions.php:function bbp_trash_reply( $reply_id = 0 ) {
includes/replies/functions.php:function bbp_untrash_reply( $reply_id = 0 ) {
includes/replies/functions.php:function bbp_deleted_reply( $reply_id = 0 ) {
includes/replies/functions.php:function bbp_trashed_reply( $reply_id = 0 ) {
includes/replies/functions.php:function bbp_untrashed_reply( $reply_id = 0 ) {
includes/replies/functions.php:function bbp_get_replies_per_page( $default = 15 ) {
includes/replies/functions.php:function bbp_get_replies_per_rss_page( $default = 25 ) {
includes/replies/functions.php:function bbp_reply_content_autoembed() {
includes/replies/functions.php: * This function filters the 'post_where' of the WP_Query, and changes the query
includes/replies/functions.php:function _bbp_has_replies_where( $where = '', $query = false ) {
includes/replies/functions.php:function bbp_display_replies_feed_rss2( $replies_query = array() ) {
includes/replies/functions.php:function bbp_check_reply_edit() {
includes/replies/functions.php:function bbp_update_reply_position( $reply_id = 0, $reply_position = false ) {
includes/replies/functions.php:function bbp_get_reply_position_raw( $reply_id = 0, $topic_id = 0 ) {
includes/replies/functions.php:function bbp_thread_replies() {
includes/replies/functions.php:function bbp_list_replies( $args = array() ) {
includes/replies/functions.php:function bbp_validate_reply_to( $reply_to = 0, $reply_id = 0 ) {
includes/replies/capabilities.php:function bbp_get_reply_caps() {
includes/replies/capabilities.php:function bbp_map_reply_meta_caps( $caps = array(), $cap = '', $user_id = 0, $args = array() ) {
includes/replies/template.php:function bbp_reply_post_type() {
includes/replies/template.php:	function bbp_get_reply_post_type() {
includes/replies/template.php:function bbp_get_reply_post_type_labels() {
includes/replies/template.php:function bbp_get_reply_post_type_rewrite() {
includes/replies/template.php:function bbp_get_reply_post_type_supports() {
includes/replies/template.php:function bbp_has_replies( $args = array() ) {
includes/replies/template.php:function bbp_replies() {
includes/replies/template.php:function bbp_the_reply() {
includes/replies/template.php:function bbp_reply_id( $reply_id = 0 ) {
includes/replies/template.php:	function bbp_get_reply_id( $reply_id = 0 ) {
includes/replies/template.php:function bbp_get_reply( $reply, $output = OBJECT, $filter = 'raw' ) {
includes/replies/template.php:function bbp_reply_permalink( $reply_id = 0 ) {
includes/replies/template.php:	function bbp_get_reply_permalink( $reply_id = 0 ) {
includes/replies/template.php:function bbp_reply_url( $reply_id = 0 ) {
includes/replies/template.php:	function bbp_get_reply_url( $reply_id = 0, $redirect_to = '' ) {
includes/replies/template.php:function bbp_reply_title( $reply_id = 0 ) {
includes/replies/template.php:	function bbp_get_reply_title( $reply_id = 0 ) {
includes/replies/template.php:	function bbp_get_reply_title_fallback( $post_title = '', $post_id = 0 ) {
includes/replies/template.php:function bbp_reply_content( $reply_id = 0 ) {
includes/replies/template.php:	function bbp_get_reply_content( $reply_id = 0 ) {
includes/replies/template.php:function bbp_reply_excerpt( $reply_id = 0, $length = 100 ) {
includes/replies/template.php:	function bbp_get_reply_excerpt( $reply_id = 0, $length = 100 ) {
includes/replies/template.php:function bbp_reply_post_date( $reply_id = 0, $humanize = false, $gmt = false ) {
includes/replies/template.php:	function bbp_get_reply_post_date( $reply_id = 0, $humanize = false, $gmt = false ) {
includes/replies/template.php:function bbp_reply_content_append_revisions( $content = '', $reply_id = 0 ) {
includes/replies/template.php:function bbp_reply_revision_log( $reply_id = 0 ) {
includes/replies/template.php:	function bbp_get_reply_revision_log( $reply_id = 0 ) {
includes/replies/template.php:		function bbp_get_reply_raw_revision_log( $reply_id = 0 ) {
includes/replies/template.php:function bbp_get_reply_revisions( $reply_id = 0 ) {
includes/replies/template.php:function bbp_get_reply_revision_count( $reply_id = 0, $integer = false ) {
includes/replies/template.php:function bbp_reply_status( $reply_id = 0 ) {
includes/replies/template.php:	function bbp_get_reply_status( $reply_id = 0 ) {
includes/replies/template.php:function bbp_is_reply_public( $reply_id = 0 ) {
includes/replies/template.php:function bbp_is_reply_published( $reply_id = 0 ) {
includes/replies/template.php:function bbp_is_reply_spam( $reply_id = 0 ) {
includes/replies/template.php:function bbp_is_reply_trash( $reply_id = 0 ) {
includes/replies/template.php:function bbp_is_reply_pending( $reply_id = 0 ) {
includes/replies/template.php:function bbp_is_reply_private( $reply_id = 0 ) {
includes/replies/template.php:function bbp_is_reply_anonymous( $reply_id = 0 ) {
includes/replies/template.php:function bbp_reply_author( $reply_id = 0 ) {
includes/replies/template.php:	function bbp_get_reply_author( $reply_id = 0 ) {
includes/replies/template.php:function bbp_reply_author_id( $reply_id = 0 ) {
includes/replies/template.php:	function bbp_get_reply_author_id( $reply_id = 0 ) {
includes/replies/template.php:function bbp_reply_author_display_name( $reply_id = 0 ) {
includes/replies/template.php:	function bbp_get_reply_author_display_name( $reply_id = 0 ) {
includes/replies/template.php:function bbp_reply_author_avatar( $reply_id = 0, $size = 40 ) {
includes/replies/template.php:	function bbp_get_reply_author_avatar( $reply_id = 0, $size = 40 ) {
includes/replies/template.php:function bbp_reply_author_link( $args = array() ) {
includes/replies/template.php:	function bbp_get_reply_author_link( $args = array() ) {
includes/replies/template.php:function bbp_reply_author_url( $reply_id = 0 ) {
includes/replies/template.php:	function bbp_get_reply_author_url( $reply_id = 0 ) {
includes/replies/template.php:function bbp_reply_author_email( $reply_id = 0 ) {
includes/replies/template.php:	function bbp_get_reply_author_email( $reply_id = 0 ) {
includes/replies/template.php:function bbp_reply_author_role( $args = array() ) {
includes/replies/template.php:	function bbp_get_reply_author_role( $args = array() ) {
includes/replies/template.php:function bbp_reply_topic_title( $reply_id = 0 ) {
includes/replies/template.php:	function bbp_get_reply_topic_title( $reply_id = 0 ) {
includes/replies/template.php:function bbp_reply_topic_id( $reply_id = 0 ) {
includes/replies/template.php:	function bbp_get_reply_topic_id( $reply_id = 0 ) {
includes/replies/template.php:function bbp_reply_forum_id( $reply_id = 0 ) {
includes/replies/template.php:	function bbp_get_reply_forum_id( $reply_id = 0 ) {
includes/replies/template.php:function bbp_reply_ancestor_id( $reply_id = 0 ) {
includes/replies/template.php:	function bbp_get_reply_ancestor_id( $reply_id = 0 ) {
includes/replies/template.php:function bbp_reply_to( $reply_id = 0 ) {
includes/replies/template.php:	function bbp_get_reply_to( $reply_id = 0 ) {
includes/replies/template.php:function bbp_reply_to_link( $args = array() ) {
includes/replies/template.php:	function bbp_get_reply_to_link( $args = array() ) {
includes/replies/template.php:function bbp_cancel_reply_to_link( $text = '' ) {
includes/replies/template.php:	function bbp_get_cancel_reply_to_link( $text = '' ) {
includes/replies/template.php:function bbp_reply_position( $reply_id = 0, $topic_id = 0 ) {
includes/replies/template.php:	function bbp_get_reply_position( $reply_id = 0, $topic_id = 0 ) {
includes/replies/template.php:function bbp_reply_admin_links( $args = array() ) {
includes/replies/template.php:	 * @param array $args This function supports these arguments:
includes/replies/template.php:	function bbp_get_reply_admin_links( $args = array() ) {
includes/replies/template.php:function bbp_reply_edit_link( $args = array() ) {
includes/replies/template.php:	 * @param array $args This function supports these arguments:
includes/replies/template.php:	function bbp_get_reply_edit_link( $args = array() ) {
includes/replies/template.php:function bbp_reply_edit_url( $reply_id = 0 ) {
includes/replies/template.php:	function bbp_get_reply_edit_url( $reply_id = 0 ) {
includes/replies/template.php:function bbp_reply_trash_link( $args = array() ) {
includes/replies/template.php:	 * @param array $args This function supports these arguments:
includes/replies/template.php:	function bbp_get_reply_trash_link( $args = array() ) {
includes/replies/template.php:function bbp_reply_spam_link( $args = array() ) {
includes/replies/template.php:	 * @param array $args This function supports these arguments:
includes/replies/template.php:	function bbp_get_reply_spam_link( $args = array() ) {
includes/replies/template.php:function bbp_reply_move_link( $args = array() ) {
includes/replies/template.php:	 * @param array $args This function supports these arguments:
includes/replies/template.php:	function bbp_get_reply_move_link( $args = array() ) {
includes/replies/template.php:function bbp_topic_split_link( $args = array() ) {
includes/replies/template.php:	 * @param array $args This function supports these arguments:
includes/replies/template.php:	function bbp_get_topic_split_link( $args = array() ) {
includes/replies/template.php:function bbp_reply_approve_link( $args = array() ) {
includes/replies/template.php:	 * @param array $args This function supports these args:
includes/replies/template.php:	function bbp_get_reply_approve_link( $args = array() ) {
includes/replies/template.php:function bbp_reply_class( $reply_id = 0, $classes = array() ) {
includes/replies/template.php:	function bbp_get_reply_class( $reply_id = 0, $classes = array() ) {
includes/replies/template.php:function bbp_get_replies_pagination_base( $topic_id = 0 ) {
includes/replies/template.php:function bbp_topic_pagination_count() {
includes/replies/template.php:	function bbp_get_topic_pagination_count() {
includes/replies/template.php:function bbp_topic_pagination_links() {
includes/replies/template.php:	function bbp_get_topic_pagination_links() {
includes/replies/template.php:function bbp_form_reply_content() {
includes/replies/template.php:	function bbp_get_form_reply_content() {
includes/replies/template.php:function bbp_form_reply_to() {
includes/replies/template.php:	function bbp_get_form_reply_to() {
includes/replies/template.php:function bbp_reply_to_dropdown( $reply_id = 0 ) {
includes/replies/template.php:	function bbp_get_reply_to_dropdown( $reply_id = 0 ) {
includes/replies/template.php:function bbp_form_reply_log_edit() {
includes/replies/template.php:	function bbp_get_form_reply_log_edit() {
includes/replies/template.php:function bbp_form_reply_edit_reason() {
includes/replies/template.php:	function bbp_get_form_reply_edit_reason() {
includes/replies/template.php: * @param $args This function supports these arguments:
includes/replies/template.php:function bbp_form_reply_status_dropdown( $args = array() ) {
includes/replies/template.php:	 * within this function to check available reply statuses.
includes/replies/template.php:	 * @param $args This function supports these arguments:
includes/replies/template.php:	function bbp_get_form_reply_status_dropdown( $args = array() ) {
includes/replies/template.php:function bbp_is_reply_form_post_request() {
includes/admin/replies.php:	public function __construct() {
includes/admin/replies.php:	private function setup_actions() {
includes/admin/replies.php:	private function setup_globals() {
includes/admin/replies.php:	public function edit_help() {
includes/admin/replies.php:	public function new_help() {
includes/admin/replies.php:	public function bulk_actions( $actions ) {
includes/admin/replies.php:	public function bulk_post_updated_messages( $bulk_messages, $bulk_counts ) {
includes/admin/replies.php:	public function handle_bulk_actions( $sendback, $doaction, $post_ids ) {
includes/admin/replies.php:	public function attributes_metabox() {
includes/admin/replies.php:	public function author_metabox() {
includes/admin/replies.php:	public function comments_metabox() {
includes/admin/replies.php:	public function save_meta_boxes( $reply_id ) {
includes/admin/replies.php:	public function toggle_reply() {
includes/admin/replies.php:	public function toggle_reply_notice() {
includes/admin/replies.php:	private function get_row_action_sort_order() {
includes/admin/replies.php:	private function get_allowed_notice_toggles() {
includes/admin/replies.php:	private function get_allowed_action_toggles() {
includes/admin/replies.php:	public function column_headers( $columns ) {
includes/admin/replies.php:	public function column_data( $column, $reply_id ) {
includes/admin/replies.php:	public function row_actions( $actions = array(), $reply = false ) {
includes/admin/replies.php:	private function sort_row_actions( $actions = array() ) {
includes/admin/replies.php:	public function filter_dropdown() {
includes/admin/replies.php:	public function filter_empty_spam() {
includes/admin/replies.php:	public function filter_post_rows( $query_vars ) {
includes/admin/replies.php:	public function updated_messages( $messages ) {
includes/admin/replies.php:function bbp_admin_replies( $current_screen ) {
includes/admin/tools/reset.php:function bbp_admin_reset_page() {
includes/admin/tools/reset.php:function bbp_admin_reset_handler() {
includes/admin/tools/reset.php:function bbp_admin_reset_query_feedback( $args = array() ) {
includes/admin/tools/reset.php:function bbp_admin_reset_database() {
includes/admin/tools/upgrade.php:function bbp_admin_upgrade_page() {
includes/admin/tools/upgrade.php:function bbp_admin_upgrade_user_engagements() {
includes/admin/tools/upgrade.php:function bbp_admin_upgrade_group_forum_relationships() {
includes/admin/tools/upgrade.php:function bbp_admin_upgrade_user_favorites() {
includes/admin/tools/upgrade.php:function bbp_admin_upgrade_user_topic_subscriptions() {
includes/admin/tools/upgrade.php:function bbp_admin_upgrade_user_forum_subscriptions() {
includes/admin/tools/upgrade.php:function bbp_admin_upgrade_remove_favorites_from_usermeta() {
includes/admin/tools/upgrade.php:function bbp_admin_upgrade_remove_topic_subscriptions_from_usermeta() {
includes/admin/tools/upgrade.php:function bbp_admin_upgrade_remove_forum_subscriptions_from_usermeta() {
includes/admin/tools/converter.php:function bbp_get_converters() {
includes/admin/tools/converter.php: * This is a function that is purposely written to look like a "new" statement.
includes/admin/tools/converter.php:function bbp_new_converter( $platform = '' ) {
includes/admin/tools/help.php:function bbp_admin_tools_repair_help() {
includes/admin/tools/help.php:function bbp_admin_tools_reset_help() {
includes/admin/tools/help.php:function bbp_admin_tools_converter_help() {
includes/admin/tools/common.php:function bbp_get_admin_repair_tool_page() {
includes/admin/tools/common.php:function bbp_get_admin_repair_tool_page_id() {
includes/admin/tools/common.php:function bbp_get_admin_repair_tool_page_url( $args = array() ) {
includes/admin/tools/common.php:function bbp_admin_repair_tool_run_url( $component = array() ) {
includes/admin/tools/common.php:	function bbp_get_admin_repair_tool_run_url( $component = array() ) {
includes/admin/tools/common.php:function bbp_admin_tools_feedback( $message, $class = false, $is_dismissible = true ) {
includes/admin/tools/common.php:function bbp_admin_repair_handler() {
includes/admin/tools/common.php:function bbp_get_admin_repair_tools( $type = '' ) {
includes/admin/tools/common.php:function bbp_get_admin_repair_tool_registered_components() {
includes/admin/tools/common.php:function bbp_admin_repair_list_search_form() {
includes/admin/tools/common.php:function bbp_admin_repair_list_components_filter() {
includes/admin/tools/common.php:function bbp_get_admin_repair_tool_registered_versions() {
includes/admin/tools/common.php:function bbp_admin_repair_list_versions_filter() {
includes/admin/tools/common.php:function bbp_admin_repair_tool_translate_overhead( $overhead = '' ) {
includes/admin/tools/common.php:function bbp_admin_repair_tool_translate_component( $component = '' ) {
includes/admin/tools/common.php:function bbp_admin_repair_tool_translate_version( $version = '' ) {
includes/admin/tools/common.php:function bbp_admin_repair_list( $type = 'repair' ) {
includes/admin/tools/common.php:function bbp_get_admin_repair_tool_components( $item = array() ) {
includes/admin/tools/common.php:function bbp_get_admin_repair_tool_version( $item = array() ) {
includes/admin/tools/common.php:function bbp_get_admin_repair_tool_overhead( $item = array() ) {
includes/admin/tools/common.php:function bbp_admin_repair_tool_overhead_filters( $args = array() ) {
includes/admin/tools/common.php:function bbp_get_admin_repair_tool_overhead_filters( $args = array() ) {
includes/admin/tools/common.php:function bbp_admin_repair_tool_status_filters( $args = array() ) {
includes/admin/tools/common.php:function bbp_get_admin_repair_tool_status_filters( $args = array() ) {
includes/admin/tools/repair.php:function bbp_admin_repair_page() {
includes/admin/tools/repair.php:function bbp_admin_repair_topic_reply_count() {
includes/admin/tools/repair.php:function bbp_admin_repair_topic_voice_count() {
includes/admin/tools/repair.php:function bbp_admin_repair_topic_hidden_reply_count() {
includes/admin/tools/repair.php:function bbp_admin_repair_forum_topic_count() {
includes/admin/tools/repair.php:function bbp_admin_repair_topic_tag_count() {
includes/admin/tools/repair.php:function bbp_admin_repair_forum_reply_count() {
includes/admin/tools/repair.php:function bbp_admin_repair_forum_hidden_reply_count() {
includes/admin/tools/repair.php:function bbp_admin_repair_user_topic_count() {
includes/admin/tools/repair.php:function bbp_admin_repair_user_reply_count() {
includes/admin/tools/repair.php:function bbp_admin_repair_user_favorites() {
includes/admin/tools/repair.php:function bbp_admin_repair_user_topic_subscriptions() {
includes/admin/tools/repair.php:function bbp_admin_repair_user_forum_subscriptions() {
includes/admin/tools/repair.php:function bbp_admin_repair_user_roles() {
includes/admin/tools/repair.php:function bbp_admin_repair_freshness() {
includes/admin/tools/repair.php:function bbp_admin_repair_sticky() {
includes/admin/tools/repair.php:function bbp_admin_repair_closed_topics() {
includes/admin/tools/repair.php:function bbp_admin_repair_forum_visibility() {
includes/admin/tools/repair.php:function bbp_admin_repair_forum_meta() {
includes/admin/tools/repair.php:function bbp_admin_repair_topic_meta() {
includes/admin/tools/repair.php:function bbp_admin_repair_reply_menu_order() {
includes/admin/actions.php:function bbp_admin() {
includes/admin/actions.php:function bbp_new_site( $blog_id, $user_id, $domain, $path, $site_id, $meta ) {
includes/admin/actions.php:function bbp_filter_column_headers( $columns = array() ) {
includes/admin/actions.php:function bbp_filter_sample_permalink( $post_link, $_post, $leavename = false, $sample = false ) {
includes/admin/actions.php:function bbp_admin_init() {
includes/admin/actions.php:function bbp_admin_menu() {
includes/admin/actions.php:function bbp_admin_head() {
includes/admin/actions.php:function bbp_admin_notices() {
includes/admin/actions.php:function bbp_register_importers() {
includes/admin/actions.php:function bbp_register_admin_styles() {
includes/admin/actions.php:function bbp_register_admin_scripts() {
includes/admin/actions.php:function bbp_register_admin_settings() {
includes/admin/actions.php:function bbp_admin_tool_box() {
includes/admin/actions.php:function bbp_current_screen( $current_screen = '' ) {
includes/admin/settings.php:function bbp_admin_get_settings_sections() {
includes/admin/settings.php:function bbp_admin_get_settings_fields() {
includes/admin/settings.php:function bbp_admin_get_settings_fields_for_section( $section_id = '' ) {
includes/admin/settings.php:function bbp_admin_setting_callback_user_section() {
includes/admin/settings.php:function bbp_admin_setting_callback_editlock() {
includes/admin/settings.php:function bbp_admin_setting_callback_throttle() {
includes/admin/settings.php:function bbp_admin_setting_callback_anonymous() {
includes/admin/settings.php:function bbp_admin_setting_callback_global_access() {
includes/admin/settings.php:function bbp_admin_setting_callback_features_section() {
includes/admin/settings.php:function bbp_admin_setting_callback_favorites() {
includes/admin/settings.php:function bbp_admin_setting_callback_subscriptions() {
includes/admin/settings.php:function bbp_admin_setting_callback_engagements() {
includes/admin/settings.php:function bbp_admin_setting_callback_topic_tags() {
includes/admin/settings.php:function bbp_admin_setting_callback_forum_mods() {
includes/admin/settings.php:function bbp_admin_setting_callback_super_mods() {
includes/admin/settings.php:function bbp_admin_setting_callback_search() {
includes/admin/settings.php:function bbp_admin_setting_callback_thread_replies_depth() {
includes/admin/settings.php:function bbp_admin_setting_callback_revisions() {
includes/admin/settings.php:function bbp_admin_setting_callback_use_wp_editor() {
includes/admin/settings.php:function bbp_admin_setting_callback_subtheme_section() {
includes/admin/settings.php:function bbp_admin_setting_callback_subtheme_id() {
includes/admin/settings.php:function bbp_admin_setting_callback_use_autoembed() {
includes/admin/settings.php:function bbp_admin_setting_callback_per_page_section() {
includes/admin/settings.php:function bbp_admin_setting_callback_topics_per_page() {
includes/admin/settings.php:function bbp_admin_setting_callback_replies_per_page() {
includes/admin/settings.php:function bbp_admin_setting_callback_per_rss_page_section() {
includes/admin/settings.php:function bbp_admin_setting_callback_topics_per_rss_page() {
includes/admin/settings.php:function bbp_admin_setting_callback_replies_per_rss_page() {
includes/admin/settings.php:function bbp_admin_setting_callback_root_slug_section() {
includes/admin/settings.php:function bbp_admin_setting_callback_root_slug() {
includes/admin/settings.php:function bbp_admin_setting_callback_include_root() {
includes/admin/settings.php:function bbp_admin_setting_callback_show_on_root() {
includes/admin/settings.php:function bbp_admin_setting_callback_user_slug_section() {
includes/admin/settings.php:function bbp_admin_setting_callback_user_slug() {
includes/admin/settings.php:function bbp_admin_setting_callback_topic_archive_slug() {
includes/admin/settings.php:function bbp_admin_setting_callback_reply_archive_slug() {
includes/admin/settings.php:function bbp_admin_setting_callback_user_favs_slug() {
includes/admin/settings.php:function bbp_admin_setting_callback_user_subs_slug() {
includes/admin/settings.php:function bbp_admin_setting_callback_user_engagements_slug() {
includes/admin/settings.php:function bbp_admin_setting_callback_single_slug_section() {
includes/admin/settings.php:function bbp_admin_setting_callback_forum_slug() {
includes/admin/settings.php:function bbp_admin_setting_callback_topic_slug() {
includes/admin/settings.php:function bbp_admin_setting_callback_reply_slug() {
includes/admin/settings.php:function bbp_admin_setting_callback_topic_tag_slug() {
includes/admin/settings.php:function bbp_admin_setting_callback_view_slug() {
includes/admin/settings.php:function bbp_admin_setting_callback_search_slug() {
includes/admin/settings.php:function bbp_admin_setting_callback_edit_slug() {
includes/admin/settings.php:function bbp_admin_setting_callback_buddypress_section() {
includes/admin/settings.php:function bbp_admin_setting_callback_group_forums() {
includes/admin/settings.php:function bbp_admin_setting_callback_group_forums_root_id() {
includes/admin/settings.php:function bbp_admin_setting_callback_akismet_section() {
includes/admin/settings.php:function bbp_admin_setting_callback_akismet() {
includes/admin/settings.php:function bbp_admin_settings() {
includes/admin/settings.php:function bbp_converter_setting_callback_main_section() {
includes/admin/settings.php:function bbp_converter_setting_callback_platform() {
includes/admin/settings.php:function bbp_converter_setting_callback_dbserver() {
includes/admin/settings.php:function bbp_converter_setting_callback_dbport() {
includes/admin/settings.php:function bbp_converter_setting_callback_dbuser() {
includes/admin/settings.php:function bbp_converter_setting_callback_dbpass() {
includes/admin/settings.php:function bbp_converter_setting_callback_dbname() {
includes/admin/settings.php:function bbp_converter_setting_callback_options_section() {
includes/admin/settings.php:function bbp_converter_setting_callback_dbprefix() {
includes/admin/settings.php:function bbp_converter_setting_callback_rows() {
includes/admin/settings.php:function bbp_converter_setting_callback_delay_time() {
includes/admin/settings.php:function bbp_converter_setting_callback_halt() {
includes/admin/settings.php:function bbp_converter_setting_callback_restart() {
includes/admin/settings.php:function bbp_converter_setting_callback_clean() {
includes/admin/settings.php:function bbp_converter_setting_callback_convert_users() {
includes/admin/settings.php:function bbp_converter_settings_page() {
includes/admin/settings.php:function bbp_admin_settings_help() {
includes/admin/settings.php:function bbp_maybe_admin_setting_disabled( $option_key = '' ) {
includes/admin/settings.php:function bbp_form_option( $option, $default = '', $slug = false ) {
includes/admin/settings.php:	function bbp_get_form_option( $option, $default = '', $is_slug = false ) {
includes/admin/settings.php:function bbp_form_slug_conflict_check( $slug, $default ) {
includes/admin/parser.php:function str_split($string, $split_length = 1) {
includes/admin/parser.php:function __construct($string, $tagmarker = '[') {
includes/admin/parser.php:function BBCodeLexer($string, $tagmarker = '[') {
includes/admin/parser.php:function GuessTextLength() {
includes/admin/parser.php:function NextToken() {
includes/admin/parser.php:function UngetToken() {
includes/admin/parser.php:function PeekToken() {
includes/admin/parser.php:function SaveState() {
includes/admin/parser.php:function RestoreState($state) {
includes/admin/parser.php:function Internal_StripQuotes($string) {
includes/admin/parser.php:function Internal_ClassifyPiece($ptr, $pieces) {
includes/admin/parser.php:function Internal_DecodeTag($tag) {
includes/admin/parser.php:function DoURL($bbcode, $action, $name, $default, $params, $content) {
includes/admin/parser.php:function DoEmail($bbcode, $action, $name, $default, $params, $content) {
includes/admin/parser.php:function DoSize($bbcode, $action, $name, $default, $params, $content) {
includes/admin/parser.php:function DoFont($bbcode, $action, $name, $default, $params, $content) {
includes/admin/parser.php:function DoWiki($bbcode, $action, $name, $default, $params, $content) {
includes/admin/parser.php:function DoImage($bbcode, $action, $name, $default, $params, $content) {
includes/admin/parser.php:function DoRule($bbcode, $action, $name, $default, $params, $content) {
includes/admin/parser.php:function DoQuote($bbcode, $action, $name, $default, $params, $content) {
includes/admin/parser.php:function DoList($bbcode, $action, $name, $default, $params, $content) {
includes/admin/parser.php:function check_email_address($strEmailAddress) {
includes/admin/parser.php:function check_local_portion($strLocalPortion) {
includes/admin/parser.php:function check_domain_portion($strDomainPortion) {
includes/admin/parser.php:function check_text_length($strText, $intMinimum, $intMaximum) {
includes/admin/parser.php:private function __construct()
includes/admin/parser.php:public static function getInstance()
includes/admin/parser.php:function SetPreTrim($trim = "a") { $this->pre_trim = $trim; }
includes/admin/parser.php:function GetPreTrim() { return $this->pre_trim; }
includes/admin/parser.php:function SetPostTrim($trim = "a") { $this->post_trim = $trim; }
includes/admin/parser.php:function GetPostTrim() { return $this->post_trim; }
includes/admin/parser.php:function SetRoot($class = 'block') { $this->root_class = $class; }
includes/admin/parser.php:function SetRootInline() { $this->root_class = 'inline'; }
includes/admin/parser.php:function SetRootBlock() { $this->root_class = 'block'; }
includes/admin/parser.php:function GetRoot() { return $this->root_class; }
includes/admin/parser.php:function SetDebug($enable = true) { $this->debug = $enable; }
includes/admin/parser.php:function GetDebug() { return $this->debug; }
includes/admin/parser.php:function SetAllowAmpersand($enable = true) { $this->allow_ampersand = $enable; }
includes/admin/parser.php:function GetAllowAmpersand() { return $this->allow_ampersand; }
includes/admin/parser.php:function SetTagMarker($marker = '[') { $this->tag_marker = $marker; }
includes/admin/parser.php:function GetTagMarker() { return $this->tag_marker; }
includes/admin/parser.php:function SetIgnoreNewlines($ignore = true) { $this->ignore_newlines = $ignore; }
includes/admin/parser.php:function GetIgnoreNewlines() { return $this->ignore_newlines; }
includes/admin/parser.php:function SetLimit($limit = 0) { $this->output_limit = $limit; }
includes/admin/parser.php:function GetLimit() { return $this->output_limit; }
includes/admin/parser.php:function SetLimitTail($tail = "...") { $this->limit_tail = $tail; }
includes/admin/parser.php:function GetLimitTail() { return $this->limit_tail; }
includes/admin/parser.php:function SetLimitPrecision($prec = 0.15) { $this->limit_precision = $prec; }
includes/admin/parser.php:function GetLimitPrecision() { return $this->limit_precision; }
includes/admin/parser.php:function WasLimited() { return $this->was_limited; }
includes/admin/parser.php:function SetPlainMode($enable = true) { $this->plain_mode = $enable; }
includes/admin/parser.php:function GetPlainMode() { return $this->plain_mode; }
includes/admin/parser.php:function SetDetectURLs($enable = true) { $this->detect_urls = $enable; }
includes/admin/parser.php:function GetDetectURLs() { return $this->detect_urls; }
includes/admin/parser.php:function SetURLPattern($pattern) { $this->url_pattern = $pattern; }
includes/admin/parser.php:function GetURLPattern() { return $this->url_pattern; }
includes/admin/parser.php:function SetURLTargetable($enable) { $this->url_targetable = $enable; }
includes/admin/parser.php:function GetURLTargetable() { return $this->url_targetable; }
includes/admin/parser.php:function SetURLTarget($target) { $this->url_target = $target; }
includes/admin/parser.php:function GetURLTarget() { return $this->url_target; }
includes/admin/parser.php:function AddRule($name, $rule) { $this->tag_rules[$name] = $rule; }
includes/admin/parser.php:function RemoveRule($name) { unset($this->tag_rules[$name]); }
includes/admin/parser.php:function GetRule($name) { return isset($this->tag_rules[$name])
includes/admin/parser.php:function ClearRules() { $this->tag_rules = Array(); }
includes/admin/parser.php:function GetDefaultRule($name) { return isset($this->defaults->default_tag_rules[$name])
includes/admin/parser.php:function SetDefaultRule($name) { if (isset($this->defaults->default_tag_rules[$name]))
includes/admin/parser.php:function GetDefaultRules() { return $this->defaults->default_tag_rules; }
includes/admin/parser.php:function SetDefaultRules() { $this->tag_rules = $this->defaults->default_tag_rules; }
includes/admin/parser.php:function SetWikiURL($url) { $this->wiki_url = $url; }
includes/admin/parser.php:function GetWikiURL($url) { return $this->wiki_url; }
includes/admin/parser.php:function GetDefaultWikiURL() { return '/?page='; }
includes/admin/parser.php:function SetLocalImgDir($path) { $this->local_img_dir = $path; }
includes/admin/parser.php:function GetLocalImgDir() { return $this->local_img_dir; }
includes/admin/parser.php:function GetDefaultLocalImgDir() { return "img"; }
includes/admin/parser.php:function SetLocalImgURL($path) { $this->local_img_url = $path; }
includes/admin/parser.php:function GetLocalImgURL() { return $this->local_img_url; }
includes/admin/parser.php:function GetDefaultLocalImgURL() { return "img"; }
includes/admin/parser.php:function SetRuleHTML($html) { $this->rule_html = $html; }
includes/admin/parser.php:function GetRuleHTML() { return $this->rule_html; }
includes/admin/parser.php:function GetDefaultRuleHTML() { return "\n<hr class=\"bbcode_rule\" />\n"; }
includes/admin/parser.php:function AddSmiley($code, $image) { $this->smileys[$code] = $image; $this->smiley_regex = false; }
includes/admin/parser.php:function RemoveSmiley($code) { unset($this->smileys[$code]); $this->smiley_regex = false; }
includes/admin/parser.php:function GetSmiley($code) { return isset($this->smileys[$code])
includes/admin/parser.php:function ClearSmileys() { $this->smileys = Array(); $this->smiley_regex = false; }
includes/admin/parser.php:function GetDefaultSmiley($code) { return isset($this->defaults->default_smileys[$code])
includes/admin/parser.php:function SetDefaultSmiley($code) { $this->smileys[$code] = @$this->defaults->default_smileys[$code];
includes/admin/parser.php:function GetDefaultSmileys() { return $this->defaults->default_smileys; }
includes/admin/parser.php:function SetDefaultSmileys() { $this->smileys = $this->defaults->default_smileys;
includes/admin/parser.php:function SetSmileyDir($path) { $this->smiley_dir = $path; }
includes/admin/parser.php:function GetSmileyDir() { return $this->smiley_dir; }
includes/admin/parser.php:function GetDefaultSmileyDir() { return "smileys"; }
includes/admin/parser.php:function SetSmileyURL($path) { $this->smiley_url = $path; }
includes/admin/parser.php:function GetSmileyURL() { return $this->smiley_url; }
includes/admin/parser.php:function GetDefaultSmileyURL() { return "smileys"; }
includes/admin/parser.php:function SetEnableSmileys($enable = true) { $this->enable_smileys = $enable; }
includes/admin/parser.php:function GetEnableSmileys() { return $this->enable_smileys; }
includes/admin/parser.php:function nl2br($string) {
includes/admin/parser.php:function UnHTMLEncode($string) {
includes/admin/parser.php:function _UnHTMLEncode_chr_callback($match) {
includes/admin/parser.php:function _UnHTMLEncode_chr_hexdec_callback($match) {
includes/admin/parser.php:function Wikify($string) {
includes/admin/parser.php:function IsValidURL($string, $email_too = true) {
includes/admin/parser.php:function IsValidEmail($string) {
includes/admin/parser.php:function HTMLEncode($string) {
includes/admin/parser.php:function FixupOutput($string) {
includes/admin/parser.php:function Internal_ProcessSmileys($string) {
includes/admin/parser.php:function Internal_RebuildSmileys() {
includes/admin/parser.php:function Internal_AutoDetectURLs($string) {
includes/admin/parser.php:function FillTemplate($template, $insert_array, $default_array = Array()) {
includes/admin/parser.php:function Internal_CollectText($array, $start = 0) {
includes/admin/parser.php:function Internal_CollectTextReverse($array, $start = 0, $end = 0) {
includes/admin/parser.php:function Internal_GenerateOutput($pos) {
includes/admin/parser.php:function Internal_RewindToClass($class_list) {
includes/admin/parser.php:function Internal_FinishTag($tag_name) {
includes/admin/parser.php:function Internal_ComputeCurrentClass() {
includes/admin/parser.php:function Internal_DumpStack($array = false, $raw = false) {
includes/admin/parser.php:function Internal_CleanupWSByPoppingStack($pattern, &$array) {
includes/admin/parser.php:function Internal_CleanupWSByEatingInput($pattern) {
includes/admin/parser.php:function Internal_CleanupWSByIteratingPointer($pattern, $pos, $array) {
includes/admin/parser.php:function Internal_LimitText($string, $limit) {
includes/admin/parser.php:function Internal_DoLimit() {
includes/admin/parser.php:function DoTag($action, $tag_name, $default_value, $params, $contents) {
includes/admin/parser.php:function Internal_DoEnhancedTag($tag_rule, $params, $contents) {
includes/admin/parser.php:function Internal_UpdateParamsForMissingEndTag($params) {
includes/admin/parser.php:function Internal_ProcessIsolatedTag($tag_name, $tag_params, $tag_rule) {
includes/admin/parser.php:function Internal_ProcessVerbatimTag($tag_name, $tag_params, $tag_rule) {
includes/admin/parser.php:function Internal_ParseStartTagToken() {
includes/admin/parser.php:function Internal_ParseEndTagToken() {
includes/admin/parser.php:function Parse($string) {
includes/admin/classes/class-bbp-converter.php:	public function __construct() {
includes/admin/classes/class-bbp-converter.php:	public function setup_globals() {
includes/admin/classes/class-bbp-converter.php:	public function setup_actions() {
includes/admin/classes/class-bbp-converter.php:	public function admin_head() {
includes/admin/classes/class-bbp-converter.php:	public function process_callback() {
includes/admin/classes/class-bbp-converter.php:	private function converter_response( $output = '' ) {
includes/admin/classes/class-bbp-converter.php:	private function maybe_set_memory() {
includes/admin/classes/class-bbp-converter.php:		// Maybe avoid terminating when the client goes away (if function is not disabled)
includes/admin/classes/class-bbp-converter.php:		// Maybe set memory & time limits, and flush style (if function is not disabled)
includes/admin/classes/class-bbp-converter.php:	private function maybe_restart() {
includes/admin/classes/class-bbp-converter.php:	private function maybe_update_options() {
includes/admin/classes/class-bbp-converter.php:	private function setup_options() {
includes/admin/classes/class-bbp-converter.php:	private function check_access() {
includes/admin/classes/class-bbp-converter.php:	private function reset() {
includes/admin/classes/class-bbp-converter.php:	private function bump_step() {
includes/admin/classes/class-bbp-converter.php:	private function bump_start() {
includes/admin/classes/class-bbp-converter.php:	private function do_steps() {
includes/admin/classes/class-bbp-converter.php:	private function step_sync_table() {
includes/admin/classes/class-bbp-converter.php:	private function step_users() {
includes/admin/classes/class-bbp-converter.php:	private function step_passwords() {
includes/admin/classes/class-bbp-converter.php:	private function step_forums() {
includes/admin/classes/class-bbp-converter.php:	private function step_forum_hierarchy() {
includes/admin/classes/class-bbp-converter.php:	private function step_forum_subscriptions() {
includes/admin/classes/class-bbp-converter.php:	private function step_topics() {
includes/admin/classes/class-bbp-converter.php:	private function step_topics_authors() {
includes/admin/classes/class-bbp-converter.php:	private function step_stickies() {
includes/admin/classes/class-bbp-converter.php:	private function step_super_stickies() {
includes/admin/classes/class-bbp-converter.php:	private function step_closed_topics() {
includes/admin/classes/class-bbp-converter.php:	private function step_topic_tags() {
includes/admin/classes/class-bbp-converter.php:	private function step_topic_subscriptions() {
includes/admin/classes/class-bbp-converter.php:	private function step_topic_favorites() {
includes/admin/classes/class-bbp-converter.php:	private function step_replies() {
includes/admin/classes/class-bbp-converter.php:	private function step_reply_authors() {
includes/admin/classes/class-bbp-converter.php:	private function step_reply_hierarchy() {
includes/admin/classes/class-bbp-converter.php:	private function step_done() {
includes/admin/classes/class-bbp-converter.php:	public static function sync_table( $drop = false ) {
includes/admin/classes/class-bbp-topic-replies-list-table.php:	public function __construct( $args = array() ) {
includes/admin/classes/class-bbp-topic-replies-list-table.php:	public function get_columns() {
includes/admin/classes/class-bbp-topic-replies-list-table.php:	public function get_sortable_columns() {
includes/admin/classes/class-bbp-topic-replies-list-table.php:	public function get_bulk_actions() {
includes/admin/classes/class-bbp-topic-replies-list-table.php:	public function column_cb( $item = '' ) {
includes/admin/classes/class-bbp-topic-replies-list-table.php:	public function column_bbp_topic_reply_author( $item = '' ) {
includes/admin/classes/class-bbp-topic-replies-list-table.php:	public function column_bbp_reply_created( $item = '' ) {
includes/admin/classes/class-bbp-topic-replies-list-table.php:	public function column_bbp_reply_content( $item = '' ) {
includes/admin/classes/class-bbp-topic-replies-list-table.php:	public function process_bulk_action() {
includes/admin/classes/class-bbp-topic-replies-list-table.php:	public function prepare_items( $topic_id = 0 ) {
includes/admin/classes/class-bbp-topic-replies-list-table.php:	public function no_items() {
includes/admin/classes/class-bbp-topic-replies-list-table.php:	public function display() {
includes/admin/classes/class-bbp-topic-replies-list-table.php:	protected function display_tablenav( $which = '' ) {
includes/admin/classes/class-bbp-topic-replies-list-table.php:	public function single_row( $item ) {
includes/admin/classes/class-bbp-converter-db.php:	public function __construct( $dbuser, $dbpassword, $dbname, $dbhost ) {
includes/admin/classes/class-bbp-converter-base.php:	public function __construct() {
includes/admin/classes/class-bbp-converter-base.php:	private function init() {
includes/admin/classes/class-bbp-converter-base.php:	public function setup_globals() {}
includes/admin/classes/class-bbp-converter-base.php:	public function convert_forums( $start = 1 ) {
includes/admin/classes/class-bbp-converter-base.php:	public function convert_topics( $start = 1 ) {
includes/admin/classes/class-bbp-converter-base.php:	public function convert_replies( $start = 1 ) {
includes/admin/classes/class-bbp-converter-base.php:	public function convert_users( $start = 1 ) {
includes/admin/classes/class-bbp-converter-base.php:	public function convert_tags( $start = 1 ) {
includes/admin/classes/class-bbp-converter-base.php:	public function convert_forum_subscriptions( $start = 1 ) {
includes/admin/classes/class-bbp-converter-base.php:	public function convert_topic_subscriptions( $start = 1 ) {
includes/admin/classes/class-bbp-converter-base.php:	public function convert_favorites( $start = 1 ) {
includes/admin/classes/class-bbp-converter-base.php:	public function convert_table( $to_type, $start ) {
includes/admin/classes/class-bbp-converter-base.php:	public function convert_forum_parents( $start = 1 ) {
includes/admin/classes/class-bbp-converter-base.php:	public function convert_topic_stickies( $start = 1 ) {
includes/admin/classes/class-bbp-converter-base.php:	public function convert_topic_super_stickies( $start = 1 ) {
includes/admin/classes/class-bbp-converter-base.php:	public function convert_topic_closed_topics( $start = 1 ) {
includes/admin/classes/class-bbp-converter-base.php:	public function convert_reply_to_parents( $start = 1 ) {
includes/admin/classes/class-bbp-converter-base.php:	public function convert_anonymous_topic_authors( $start = 1 ) {
includes/admin/classes/class-bbp-converter-base.php:	public function convert_anonymous_reply_authors( $start = 1 ) {
includes/admin/classes/class-bbp-converter-base.php:	public function clean() {
includes/admin/classes/class-bbp-converter-base.php:	public function clean_passwords( $start = 1 ) {
includes/admin/classes/class-bbp-converter-base.php:	abstract protected function authenticate_pass( $password, $hash );
includes/admin/classes/class-bbp-converter-base.php:	abstract protected function info();
includes/admin/classes/class-bbp-converter-base.php:	private function get_fields( $tablename = '' ) {
includes/admin/classes/class-bbp-converter-base.php:	private function get_row( $query = '' ) {
includes/admin/classes/class-bbp-converter-base.php:	private function get_results( $query = '', $output = OBJECT ) {
includes/admin/classes/class-bbp-converter-base.php:	private function query( $query = '' ) {
includes/admin/classes/class-bbp-converter-base.php:	private function update_query( $query = '' ) {
includes/admin/classes/class-bbp-converter-base.php:	private function count_rows_by_results( $query = '' ) {
includes/admin/classes/class-bbp-converter-base.php:	private function count_rows_by_table( $table_name = '' ) {
includes/admin/classes/class-bbp-converter-base.php:	public function callback_pass( $username = '', $password = '' ) {
includes/admin/classes/class-bbp-converter-base.php:	private function callback_forumid( $field ) {
includes/admin/classes/class-bbp-converter-base.php:	private function callback_topicid( $field ) {
includes/admin/classes/class-bbp-converter-base.php:	private function callback_reply_to( $field ) {
includes/admin/classes/class-bbp-converter-base.php:	private function callback_userid( $field ) {
includes/admin/classes/class-bbp-converter-base.php:	private function callback_check_anonymous( $field ) {
includes/admin/classes/class-bbp-converter-base.php:	private function callback_topicid_to_forumid( $field ) {
includes/admin/classes/class-bbp-converter-base.php:	protected function callback_slug( $field ) {
includes/admin/classes/class-bbp-converter-base.php:	protected function callback_negative( $field ) {
includes/admin/classes/class-bbp-converter-base.php:	protected function callback_html( $field ) {
includes/admin/classes/class-bbp-converter-base.php:	protected function callback_null( $field ) {
includes/admin/classes/class-bbp-converter-base.php:	protected function callback_datetime( $field ) {
includes/admin/classes/class-bbp-admin.php:	public function __construct() {
includes/admin/classes/class-bbp-admin.php:	private function setup_globals() {
includes/admin/classes/class-bbp-admin.php:	private function includes() {
includes/admin/classes/class-bbp-admin.php:	private function setup_actions() {
includes/admin/classes/class-bbp-admin.php:	public function setup_notices() {
includes/admin/classes/class-bbp-admin.php:	public function hide_notices() {
includes/admin/classes/class-bbp-admin.php:	public function output_notices() {
includes/admin/classes/class-bbp-admin.php:	public function add_notice( $message, $class = false, $is_dismissible = true ) {
includes/admin/classes/class-bbp-admin.php:	private function esc_notice( $message = '' ) {
includes/admin/classes/class-bbp-admin.php:	public function add_upgrade_count() {
includes/admin/classes/class-bbp-admin.php:	public function admin_menus() {
includes/admin/classes/class-bbp-admin.php:	public function network_admin_menus() {
includes/admin/classes/class-bbp-admin.php:	public static function register_admin_settings() {
includes/admin/classes/class-bbp-admin.php:	public static function map_settings_meta_caps( $caps = array(), $cap = '', $user_id = 0, $args = array() ) {
includes/admin/classes/class-bbp-admin.php:	public function register_importers() {
includes/admin/classes/class-bbp-admin.php:	public static function modify_plugin_action_links( $links, $file ) {
includes/admin/classes/class-bbp-admin.php:	public function enqueue_scripts() {
includes/admin/classes/class-bbp-admin.php:	public function enqueue_styles() {
includes/admin/classes/class-bbp-admin.php:	public function admin_head() {
includes/admin/classes/class-bbp-admin.php:	public function register_admin_styles() {
includes/admin/classes/class-bbp-admin.php:	public function register_admin_scripts() {
includes/admin/classes/class-bbp-admin.php:	public function option_page_capability_bbpress( $capability = 'manage_options' ) {
includes/admin/classes/class-bbp-admin.php:	public function suggest_topic() {
includes/admin/classes/class-bbp-admin.php:	public function suggest_user() {
includes/admin/classes/class-bbp-admin.php:	private function screen_header() {
includes/admin/classes/class-bbp-admin.php:	public function about_screen() {
includes/admin/classes/class-bbp-admin.php:	public function credits_screen() {
includes/admin/classes/class-bbp-admin.php:	public static function update_screen() {
includes/admin/classes/class-bbp-admin.php:	public static function network_update_screen() {
includes/admin/classes/class-bbp-admin.php:						function nextpage() {
includes/admin/topics.php:	public function __construct() {
includes/admin/topics.php:	private function setup_actions() {
includes/admin/topics.php:	private function setup_globals() {
includes/admin/topics.php:	public function edit_help() {
includes/admin/topics.php:	public function new_help() {
includes/admin/topics.php:	public function bulk_actions( $actions ) {
includes/admin/topics.php:	public function bulk_post_updated_messages( $bulk_messages, $bulk_counts ) {
includes/admin/topics.php:	public function handle_bulk_actions( $sendback, $doaction, $post_ids ) {
includes/admin/topics.php:	public function attributes_metabox() {
includes/admin/topics.php:	public function author_metabox() {
includes/admin/topics.php:	public function replies_metabox() {
includes/admin/topics.php:	public function engagements_metabox() {
includes/admin/topics.php:	public function favorites_metabox() {
includes/admin/topics.php:	public function subscriptions_metabox() {
includes/admin/topics.php:	public function comments_metabox() {
includes/admin/topics.php:	public function save_meta_boxes( $topic_id ) {
includes/admin/topics.php:	public function toggle_topic() {
includes/admin/topics.php:	public function toggle_topic_notice() {
includes/admin/topics.php:	private function get_row_action_sort_order() {
includes/admin/topics.php:	private function get_allowed_notice_toggles() {
includes/admin/topics.php:	private function get_allowed_action_toggles() {
includes/admin/topics.php:	public function column_headers( $columns ) {
includes/admin/topics.php:	public function column_data( $column, $topic_id ) {
includes/admin/topics.php:	public function row_actions( $actions = array(), $topic = false ) {
includes/admin/topics.php:	private function sort_row_actions( $actions = array() ) {
includes/admin/topics.php:	public function filter_dropdown() {
includes/admin/topics.php:	public function filter_empty_spam() {
includes/admin/topics.php:	function filter_post_rows( $query_vars ) {
includes/admin/topics.php:	public function updated_messages( $messages ) {
includes/admin/topics.php:function bbp_admin_topics( $current_screen ) {
includes/admin/converters/Invision.php:	public function __construct() {
includes/admin/converters/Invision.php:	public function setup_globals() {
includes/admin/converters/Invision.php:	public function info() {
includes/admin/converters/Invision.php:	public function callback_forum_type( $status = 0 ) {
includes/admin/converters/Invision.php:	public function callback_sticky_status( $status = 0 ) {
includes/admin/converters/Invision.php:	public function callback_topic_reply_count( $count = 1 ) {
includes/admin/converters/Invision.php:	public function callback_savepass( $field, $row ) {
includes/admin/converters/Invision.php:	public function authenticate_pass( $password, $serialized_pass ) {
includes/admin/converters/Invision.php:	private function to_char( $input ) {
includes/admin/converters/Invision.php:	protected function callback_html( $field ) {
includes/admin/converters/PHPFox3.php:	public function __construct() {
includes/admin/converters/PHPFox3.php:	public function setup_globals() {
includes/admin/converters/PHPFox3.php:	public function info() {
includes/admin/converters/PHPFox3.php:	public function callback_savepass( $field, $row ) {
includes/admin/converters/PHPFox3.php:	public function authenticate_pass( $password, $serialized_pass ) {
includes/admin/converters/PHPFox3.php:	public function callback_forum_type( $status = 0 ) {
includes/admin/converters/PHPFox3.php:	public function callback_forum_status( $status = 0 ) {
includes/admin/converters/PHPFox3.php:	public function callback_topic_status( $status = 0 ) {
includes/admin/converters/PHPFox3.php:	public function callback_sticky_status( $status = 0 ) {
includes/admin/converters/PHPFox3.php:	public function callback_topic_reply_count( $count = 1 ) {
includes/admin/converters/Vanilla.php:	public function __construct() {
includes/admin/converters/Vanilla.php:	public function setup_globals() {
includes/admin/converters/Vanilla.php:	public function info() {
includes/admin/converters/Vanilla.php:	public function callback_topic_status( $status = 0 ) {
includes/admin/converters/Vanilla.php:	public function callback_sticky_status( $status = 0 ) {
includes/admin/converters/Vanilla.php:	public function callback_forum_parent( $parent = 0 ) {
includes/admin/converters/Vanilla.php:	public function callback_topic_reply_count( $count = 1 ) {
includes/admin/converters/Vanilla.php:	public function callback_savepass( $field, $row ) {
includes/admin/converters/Vanilla.php:	public function authenticate_pass( $password, $serialized_pass ) {
includes/admin/converters/AEF.php:	public function __construct() {
includes/admin/converters/AEF.php:	public function setup_globals() {
includes/admin/converters/AEF.php:	public function info() {
includes/admin/converters/AEF.php:	public function callback_savepass( $field, $row ) {
includes/admin/converters/AEF.php:	public function authenticate_pass( $password, $serialized_pass ) {
includes/admin/converters/AEF.php:	public function callback_forum_status( $status = 1 ) {
includes/admin/converters/AEF.php:	public function callback_topic_status( $status = 1 ) {
includes/admin/converters/AEF.php:	public function callback_sticky_status( $status = 0 ) {
includes/admin/converters/AEF.php:	public function callback_topic_reply_count( $count = 1 ) {
includes/admin/converters/PHPWind.php:	public function __construct() {
includes/admin/converters/PHPWind.php:	public function setup_globals() {
includes/admin/converters/PHPWind.php:	public function info() {
includes/admin/converters/PHPWind.php:	public function callback_savepass( $field, $row ) {
includes/admin/converters/PHPWind.php:	public function authenticate_pass( $password, $serialized_pass ) {
includes/admin/converters/PHPWind.php:	public function callback_forum_type( $status = 1 ) {
includes/admin/converters/PHPWind.php:	public function callback_topic_status( $status = 2 ) {
includes/admin/converters/PHPWind.php:	public function callback_topic_reply_count( $count = 1 ) {
includes/admin/converters/e107v1.php:	public function __construct() {
includes/admin/converters/e107v1.php:	public function setup_globals() {
includes/admin/converters/e107v1.php:	public function info() {
includes/admin/converters/e107v1.php:	public function callback_savepass( $field, $row ) {
includes/admin/converters/e107v1.php:	public function authenticate_pass( $password, $serialized_pass ) {
includes/admin/converters/e107v1.php:	public function callback_forum_type( $status = 0 ) {
includes/admin/converters/e107v1.php:	public function callback_topic_status( $status = 1 ) {
includes/admin/converters/e107v1.php:	public function callback_sticky_status( $status = 0 ) {
includes/admin/converters/e107v1.php:	public function callback_topic_reply_count( $count = 1 ) {
includes/admin/converters/e107v1.php:	 * Override the `callback_user` function in 'converter.php' for custom e107v1 imports
includes/admin/converters/e107v1.php:	protected function callback_e107v1_userid( $field ) {
includes/admin/converters/e107v1.php:	protected function callback_html( $field ) {
includes/admin/converters/PunBB.php:	public function __construct() {
includes/admin/converters/PunBB.php:	public function setup_globals() {
includes/admin/converters/PunBB.php:	public function info() {
includes/admin/converters/PunBB.php:	public function callback_savepass( $field, $row ) {
includes/admin/converters/PunBB.php:	public function authenticate_pass( $password, $serialized_pass ) {
includes/admin/converters/PunBB.php:	public function callback_topic_status( $status = 0 ) {
includes/admin/converters/PunBB.php:	public function callback_sticky_status( $status = 0 ) {
includes/admin/converters/PunBB.php:	public function callback_topic_reply_count( $count = 1 ) {
includes/admin/converters/SMF.php:	public function __construct() {
includes/admin/converters/SMF.php:	public function setup_globals() {
includes/admin/converters/SMF.php:	public function info() {
includes/admin/converters/SMF.php:	public function callback_savepass( $field, $row ) {
includes/admin/converters/SMF.php:	public function authenticate_pass( $password, $serialized_pass ) {
includes/admin/converters/SMF.php:	public function callback_topic_status( $status = 0 ) {
includes/admin/converters/SMF.php:	public function callback_sticky_status( $status = 0 ) {
includes/admin/converters/SMF.php:	public function callback_topic_reply_count( $count = 1 ) {
includes/admin/converters/SMF.php:	protected function callback_html( $field ) {
includes/admin/converters/XenForo.php:	public function __construct() {
includes/admin/converters/XenForo.php:	public function setup_globals() {
includes/admin/converters/XenForo.php:	public function info() {
includes/admin/converters/XenForo.php:	public function translate_savepass( $field, $row ) {
includes/admin/converters/XenForo.php:	public function authenticate_pass( $password, $serialized_pass ) {
includes/admin/converters/XenForo.php:	public function callback_forum_type( $status = 1 ) {
includes/admin/converters/XenForo.php:	public function callback_forum_status( $status = 1 ) {
includes/admin/converters/XenForo.php:	public function callback_status( $status = 1 ) {
includes/admin/converters/XenForo.php:	public function callback_topic_status( $status = 1 ) {
includes/admin/converters/XenForo.php:	public function callback_sticky_status( $status = 0 ) {
includes/admin/converters/XenForo.php:	public function callback_topic_reply_count( $count = 1 ) {
includes/admin/converters/XenForo.php:	protected function callback_html( $field ) {
includes/admin/converters/bbPress1.php:	public function __construct() {
includes/admin/converters/bbPress1.php:	public function setup_globals() {
includes/admin/converters/bbPress1.php:	public function info() {
includes/admin/converters/bbPress1.php:	public function callback_status( $status = 0 ) {
includes/admin/converters/bbPress1.php:	public function callback_forum_type( $status = 0 ) {
includes/admin/converters/bbPress1.php:	public function callback_topic_status( $topic_status = 1 ) {
includes/admin/converters/bbPress1.php:	public function callback_sticky_status( $status = 0 ) {
includes/admin/converters/bbPress1.php:	public function callback_topic_reply_count( $count = 1 ) {
includes/admin/converters/bbPress1.php:	public function callback_savepass( $field, $row ) {
includes/admin/converters/bbPress1.php:	public function authenticate_pass( $password, $serialized_pass ) {
includes/admin/converters/bbPress1.php:	protected function callback_topic_subscriptions( $field ) {
includes/admin/converters/FluxBB.php:	public function __construct() {
includes/admin/converters/FluxBB.php:	public function setup_globals() {
includes/admin/converters/FluxBB.php:	public function info() {
includes/admin/converters/FluxBB.php:	public function callback_savepass( $field, $row ) {
includes/admin/converters/FluxBB.php:	public function authenticate_pass( $password, $serialized_pass ) {
includes/admin/converters/FluxBB.php:	public function callback_topic_status( $status = 0 ) {
includes/admin/converters/FluxBB.php:	public function callback_sticky_status( $status = 0 ) {
includes/admin/converters/FluxBB.php:	public function callback_topic_reply_count( $count = 1 ) {
includes/admin/converters/Drupal7.php:	public function __construct() {
includes/admin/converters/Drupal7.php:	public function setup_globals() {
includes/admin/converters/Drupal7.php:	public function info() {
includes/admin/converters/Drupal7.php:	public function callback_savepass( $field, $row ) {
includes/admin/converters/Drupal7.php:	public function authenticate_pass( $password, $serialized_pass ) {
includes/admin/converters/Drupal7.php:	public function callback_status( $status = 1 ) {
includes/admin/converters/Drupal7.php:	public function callback_topic_status( $status = 2 ) {
includes/admin/converters/Drupal7.php:	public function callback_sticky_status( $status = 0 ) {
includes/admin/converters/Drupal7.php:	public function callback_topic_reply_count( $count = 1 ) {
includes/admin/converters/XMB.php:	public function __construct() {
includes/admin/converters/XMB.php:	public function setup_globals() {
includes/admin/converters/XMB.php:	public function info() {
includes/admin/converters/XMB.php:	public function callback_savepass( $field, $row ) {
includes/admin/converters/XMB.php:	public function authenticate_pass( $password, $serialized_pass ) {
includes/admin/converters/XMB.php:	public function callback_forum_type( $status = 1 ) {
includes/admin/converters/XMB.php:	public function callback_topic_status( $status = '' ) {
includes/admin/converters/XMB.php:	public function callback_sticky_status( $status = 0 ) {
includes/admin/converters/XMB.php:	public function callback_topic_reply_count( $count = 1 ) {
includes/admin/converters/vBulletin.php:	public function __construct() {
includes/admin/converters/vBulletin.php:	public function setup_globals() {
includes/admin/converters/vBulletin.php:	public function info() {
includes/admin/converters/vBulletin.php:	public function callback_savepass( $field, $row ) {
includes/admin/converters/vBulletin.php:	public function authenticate_pass( $password, $serialized_pass ) {
includes/admin/converters/vBulletin.php:	public function callback_forum_type( $status = 0 ) {
includes/admin/converters/vBulletin.php:	public function callback_sticky_status( $status = 0 ) {
includes/admin/converters/vBulletin.php:	public function callback_topic_reply_count( $count = 1 ) {
includes/admin/converters/vBulletin.php:	public function callback_topic_status( $status = 1 ) {
includes/admin/converters/vBulletin.php:	protected function callback_html( $field ) {
includes/admin/converters/vBulletin3.php:	public function __construct() {
includes/admin/converters/vBulletin3.php:	public function setup_globals() {
includes/admin/converters/vBulletin3.php:	public function info() {
includes/admin/converters/vBulletin3.php:	public function callback_savepass( $field, $row ) {
includes/admin/converters/vBulletin3.php:	public function authenticate_pass( $password, $serialized_pass ) {
includes/admin/converters/vBulletin3.php:	public function callback_forum_type( $status = 0 ) {
includes/admin/converters/vBulletin3.php:	public function callback_sticky_status( $status = 0 ) {
includes/admin/converters/vBulletin3.php:	public function callback_topic_reply_count( $count = 1 ) {
includes/admin/converters/vBulletin3.php:	public function callback_topic_status( $status = 1 ) {
includes/admin/converters/vBulletin3.php:	protected function callback_html( $field ) {
includes/admin/converters/phpBB.php:	public function __construct() {
includes/admin/converters/phpBB.php:	public function setup_globals() {
includes/admin/converters/phpBB.php:	public function info() {
includes/admin/converters/phpBB.php:	public function callback_savepass( $field, $row ) {
includes/admin/converters/phpBB.php:	public function authenticate_pass( $password, $serialized_pass ) {
includes/admin/converters/phpBB.php:	private function _hash_crypt_private( $password, $setting, &$itoa64 ) {
includes/admin/converters/phpBB.php:	private function _hash_encode64( $input, $count, &$itoa64 ) {
includes/admin/converters/phpBB.php:	public function callback_forum_type( $status = 1 ) {
includes/admin/converters/phpBB.php:	public function callback_forum_status( $status = 0 ) {
includes/admin/converters/phpBB.php:	public function callback_topic_status( $status = 0 ) {
includes/admin/converters/phpBB.php:	public function callback_sticky_status( $status = 0 ) {
includes/admin/converters/phpBB.php:	public function callback_topic_reply_count( $count = 1 ) {
includes/admin/converters/phpBB.php:	protected function callback_html( $field ) {
includes/admin/converters/SimplePress5.php:	public function __construct() {
includes/admin/converters/SimplePress5.php:	public function setup_globals() {
includes/admin/converters/SimplePress5.php:	public function info() {
includes/admin/converters/SimplePress5.php:	public function callback_savepass( $field, $row ) {
includes/admin/converters/SimplePress5.php:	public function authenticate_pass( $password, $serialized_pass ) {
includes/admin/converters/SimplePress5.php:	public function callback_status( $status = 0 ) {
includes/admin/converters/SimplePress5.php:	public function callback_sticky_status( $status = 0 ) {
includes/admin/converters/SimplePress5.php:	public function callback_topic_reply_count( $count = 1 ) {
includes/admin/converters/SimplePress5.php:	protected function callback_html( $field ) {
includes/admin/converters/Kunena3.php:	public function __construct() {
includes/admin/converters/Kunena3.php:	public function setup_globals() {
includes/admin/converters/Kunena3.php:	public function info() {
includes/admin/converters/Kunena3.php:	public function callback_savepass( $field, $row ) {
includes/admin/converters/Kunena3.php:	public function authenticate_pass( $password, $serialized_pass ) {
includes/admin/converters/Kunena3.php:	public function callback_forum_type( $status = 0 ) {
includes/admin/converters/Kunena3.php:	public function callback_forum_status( $status = 0 ) {
includes/admin/converters/Kunena3.php:	public function callback_topic_status( $status = 0 ) {
includes/admin/converters/Kunena3.php:	public function callback_topic_reply_count( $count = 1 ) {
includes/admin/converters/Kunena2.php:	public function __construct() {
includes/admin/converters/Kunena2.php:	public function setup_globals() {
includes/admin/converters/Kunena2.php:	public function info() {
includes/admin/converters/Kunena2.php:	public function callback_savepass($field, $row) {
includes/admin/converters/Kunena2.php:	public function authenticate_pass($password, $serialized_pass) {
includes/admin/converters/Kunena2.php:	public function callback_forum_type( $status = 0 ) {
includes/admin/converters/Kunena2.php:	public function callback_forum_status( $status = 0 ) {
includes/admin/converters/Kunena2.php:	public function callback_topic_status( $status = 0 ) {
includes/admin/converters/Kunena2.php:	public function callback_topic_reply_count( $count = 1 ) {
includes/admin/converters/Kunena1.php:	public function __construct() {
includes/admin/converters/Kunena1.php:	public function setup_globals() {
includes/admin/converters/Kunena1.php:	public function info() {
includes/admin/converters/Kunena1.php:	public function callback_savepass($field, $row) {
includes/admin/converters/Kunena1.php:	public function authenticate_pass($password, $serialized_pass) {
includes/admin/converters/Kunena1.php:	public function callback_forum_type( $status = 0 ) {
includes/admin/converters/Kunena1.php:	public function callback_forum_status( $status = 0 ) {
includes/admin/converters/Kunena1.php:	public function callback_topic_status( $status = 0 ) {
includes/admin/converters/Phorum.php:	public function __construct() {
includes/admin/converters/Phorum.php:	public function setup_globals() {
includes/admin/converters/Phorum.php:	public function info() {
includes/admin/converters/Phorum.php:	public function callback_savepass( $field, $row ) {
includes/admin/converters/Phorum.php:	public function authenticate_pass( $password, $serialized_pass ) {
includes/admin/converters/Phorum.php:	public function callback_forum_type( $status = 0 ) {
includes/admin/converters/Phorum.php:	public function callback_topic_status( $status = 0 ) {
includes/admin/converters/Phorum.php:	public function callback_topic_reply_count( $count = 1 ) {
includes/admin/converters/MyBB.php:	public function __construct() {
includes/admin/converters/MyBB.php:	public function setup_globals() {
includes/admin/converters/MyBB.php:	public function info() {
includes/admin/converters/MyBB.php:	public function callback_savepass( $field, $row ) {
includes/admin/converters/MyBB.php:	public function authenticate_pass( $password, $serialized_pass ) {
includes/admin/converters/MyBB.php:	public function callback_topic_status( $status = 0 ) {
includes/admin/converters/MyBB.php:	public function callback_sticky_status( $status = 0 ) {
includes/admin/converters/MyBB.php:	public function callback_topic_reply_count( $count = 1 ) {
includes/admin/converters/Mingle.php:	public function __construct() {
includes/admin/converters/Mingle.php:	public function setup_globals()	{
includes/admin/converters/Mingle.php:	public function info() {
includes/admin/converters/Mingle.php:	public function callback_savepass( $field, $row ) {
includes/admin/converters/Mingle.php:	public function authenticate_pass( $password, $serialized_pass ) {
includes/admin/converters/Mingle.php:	public function callback_topic_status( $status = 0 ) {
includes/admin/converters/Mingle.php:	public function callback_sticky_status( $status = 0 ) {
includes/admin/converters/Example.php:	public function __construct() {
includes/admin/converters/Example.php:	public function setup_globals() {
includes/admin/converters/Example.php:	public function info() {
includes/admin/converters/Example.php:	public function callback_savepass( $field, $row ) {
includes/admin/converters/Example.php:	public function authenticate_pass( $password, $serialized_pass ) {
includes/admin/tools.php:function bbp_admin_tools_box() {
includes/admin/tools.php:function bbp_register_repair_tool( $args = array() ) {
includes/admin/tools.php:function bbp_register_default_repair_tools() {
includes/admin/tools.php:function bbp_tools_admin_tabs( $active_tab = '' ) {
includes/admin/tools.php:	function bbp_get_tools_admin_tabs( $active_tab = '' ) {
includes/admin/tools.php:function bbp_get_tools_admin_pages() {
includes/admin/forums.php:	public function __construct() {
includes/admin/forums.php:	private function setup_actions() {
includes/admin/forums.php:	private function setup_globals() {
includes/admin/forums.php:	public function edit_help() {
includes/admin/forums.php:	public function new_help() {
includes/admin/forums.php:	public function attributes_metabox() {
includes/admin/forums.php:	public function moderators_metabox() {
includes/admin/forums.php:	public function subscriptions_metabox() {
includes/admin/forums.php:	public function comments_metabox() {
includes/admin/forums.php:	public function save_meta_boxes( $forum_id ) {
includes/admin/forums.php:	public function toggle_forum() {
includes/admin/forums.php:	public function toggle_forum_notice() {
includes/admin/forums.php:	private function get_row_action_sort_order() {
includes/admin/forums.php:	private function get_allowed_notice_toggles() {
includes/admin/forums.php:	private function get_allowed_action_toggles() {
includes/admin/forums.php:	public function column_headers( $columns ) {
includes/admin/forums.php:	public function column_data( $column, $forum_id ) {
includes/admin/forums.php:	public function row_actions( $actions = array(), $forum = false ) {
includes/admin/forums.php:	private function sort_row_actions( $actions = array() ) {
includes/admin/forums.php:	public function updated_messages( $messages ) {
includes/admin/forums.php:function bbp_admin_forums( $current_screen ) {
includes/admin/metaboxes.php:function bbp_filter_dashboard_glance_items( $elements = array() ) {
includes/admin/metaboxes.php:function bbp_dashboard_widget_right_now() {
includes/admin/metaboxes.php:function bbp_forum_metabox( $post ) {
includes/admin/metaboxes.php:function bbp_topic_metabox( $post ) {
includes/admin/metaboxes.php:function bbp_reply_metabox( $post ) {
includes/admin/metaboxes.php:function bbp_topic_replies_metabox( $topic = false ) {
includes/admin/metaboxes.php:function bbp_author_metabox( $post ) {
includes/admin/metaboxes.php:function bbp_moderator_assignment_metabox( $post ) {
includes/admin/metaboxes.php:function bbp_topic_engagements_metabox( $post ) {
includes/admin/metaboxes.php:function bbp_topic_favorites_metabox( $post ) {
includes/admin/metaboxes.php:function bbp_topic_subscriptions_metabox( $post ) {
includes/admin/metaboxes.php:function bbp_forum_subscriptions_metabox( $post ) {
includes/admin/metaboxes.php: * Developers Note: This function may change in a future release to include
includes/admin/metaboxes.php: * additional actions, so do not use this function in any third party plugin.
includes/admin/metaboxes.php:function bbp_metabox_user_links() {
includes/admin/users.php:	public function __construct() {
includes/admin/users.php:	function setup_actions() {
includes/admin/users.php:	public static function secondary_role_display( $profileuser ) {
includes/admin/users.php:	public static function user_role_bulk_dropdown( $which ) {
includes/admin/users.php:	public function user_role_bulk_change() {
includes/admin/users.php:	public function user_row_actions( $actions = array(), $user = false ) {
includes/admin/users.php:	public static function user_role_column( $columns = array() ) {
includes/admin/users.php:	public static function user_role_row( $retval = '', $column_name = '', $user_id = 0 ) {
includes/admin/users.php:	public static function user_role_list_filter( $roles, $user ) {
includes/admin/common.php:function bbp_admin_separator() {
includes/admin/common.php:function bbp_admin_custom_menu_order( $menu_order = false ) {
includes/admin/common.php:function bbp_admin_menu_order( $menu_order ) {
includes/admin/common.php:function bbp_sanitize_slug( $slug = '' ) {
includes/admin/common.php:function bbp_do_uninstall( $site_id = 0 ) {
includes/admin/common.php:function bbp_tools_modify_menu_highlight() {
includes/search/functions.php:function bbp_search_query( $new_args = array() ) {
includes/search/functions.php:function bbp_get_search_query_args() {
includes/search/functions.php:function bbp_search_results_redirect() {
includes/search/functions.php:function bbp_get_search_type_ids() {
includes/search/functions.php:function bbp_sanitize_search_request( $query_arg = 's' ) {
includes/search/template.php:function bbp_has_search_results( $args = array() ) {
includes/search/template.php:function bbp_search_results() {
includes/search/template.php:function bbp_the_search_result() {
includes/search/template.php:function bbp_search_title() {
includes/search/template.php:	function bbp_get_search_title() {
includes/search/template.php:function bbp_search_url() {
includes/search/template.php:	function bbp_get_search_url() {
includes/search/template.php:function bbp_search_results_url() {
includes/search/template.php:	function bbp_get_search_results_url() {
includes/search/template.php:function bbp_search_terms( $search_terms = '' ) {
includes/search/template.php:	function bbp_get_search_terms( $passed_terms = '' ) {
includes/search/template.php:function bbp_get_search_pagination_base() {
includes/search/template.php:function bbp_search_pagination_count() {
includes/search/template.php:	function bbp_get_search_pagination_count() {
includes/search/template.php:function bbp_search_pagination_links() {
includes/search/template.php:	function bbp_get_search_pagination_links() {
includes/common/functions.php:function bbp_get_post_types( $args = array() ) {
includes/common/functions.php:function bbp_get_redirect_to() {
includes/common/functions.php:function bbp_add_view_all( $original_link = '', $force = false ) {
includes/common/functions.php:function bbp_remove_view_all( $original_link = '' ) {
includes/common/functions.php:function bbp_get_view_all( $cap = 'moderate' ) {
includes/common/functions.php:function bbp_get_paged() {
includes/common/functions.php:function bbp_get_unique_array_values( $array = array() ) {
includes/common/functions.php: * function fixes that.
includes/common/functions.php:function bbp_fix_post_author( $data = array(), $postarr = array() ) {
includes/common/functions.php:function bbp_fix_untrash_post_status( $new_status = 'draft', $post_id = 0, $previous_status = 'pending' ) {
includes/common/functions.php:function bbp_past_edit_lock( $datetime = '', $utc = true ) {
includes/common/functions.php:function bbp_get_trash_days( $context = 'forum' ) {
includes/common/functions.php: * @param array $args Optional. The function supports these arguments (all
includes/common/functions.php:function bbp_get_statistics( $args = array() ) {
includes/common/functions.php:function bbp_filter_anonymous_post_data( $args = array() ) {
includes/common/functions.php:function bbp_sanitize_anonymous_post_author( $anonymous_data = array() ) {
includes/common/functions.php:function bbp_update_anonymous_post_author( $post_id = 0, $anonymous_data = array(), $post_type = '' ) {
includes/common/functions.php:function bbp_check_for_duplicate( $post_data = array() ) {
includes/common/functions.php:function bbp_check_for_flood( $anonymous_data = array(), $author_id = 0 ) {
includes/common/functions.php:function bbp_check_for_moderation( $anonymous_data = array(), $author_id = 0, $title = '', $content = '', $strict = false ) {
includes/common/functions.php:function bbp_check_for_blacklist( $anonymous_data = array(), $author_id = 0, $title = '', $content = '' ) {
includes/common/functions.php:function bbp_get_do_not_reply_address() {
includes/common/functions.php: * those cases, we recommend unhooking this function and creating your own
includes/common/functions.php:function bbp_notify_topic_subscribers( $reply_id = 0, $topic_id = 0, $forum_id = 0, $anonymous_data = array(), $reply_author = 0 ) {
includes/common/functions.php: * those cases, we recommend unhooking this function and creating your own
includes/common/functions.php:function bbp_notify_forum_subscribers( $topic_id = 0, $forum_id = 0, $anonymous_data = array(), $topic_author = 0 ) {
includes/common/functions.php: * This function is deprecated. Please use: bbp_notify_topic_subscribers()
includes/common/functions.php:function bbp_notify_subscribers( $reply_id = 0, $topic_id = 0, $forum_id = 0, $anonymous_data = array(), $reply_author = 0 ) {
includes/common/functions.php:function bbp_get_email_addresses_from_user_ids( $user_ids = array() ) {
includes/common/functions.php:function bbp_chunk_emails( $args = array() ) {
includes/common/functions.php:function bbp_get_email_header() {
includes/common/functions.php: * This function is used to filter `logout_url`. If no $redirect_to value is
includes/common/functions.php:function bbp_logout_url( $url = '', $redirect_to = '' ) {
includes/common/functions.php: * This function is used throughout bbPress to allow for either a string or array
includes/common/functions.php:function bbp_parse_args( $args, $defaults = array(), $filter_key = '' ) {
includes/common/functions.php:function bbp_query_post_parent__in( $where, $object = '' ) {
includes/common/functions.php:function bbp_get_public_child_last_id( $parent_id = 0, $post_type = 'post' ) {
includes/common/functions.php:function bbp_get_child_counts( $parent_id = 0 ) {
includes/common/functions.php:function bbp_filter_child_counts_list( $parent_id = 0, $types = array( 'post' ), $statuses = array() ) {
includes/common/functions.php:function bbp_get_public_child_count( $parent_id = 0, $post_type = 'post' ) {
includes/common/functions.php:function bbp_get_non_public_child_count( $parent_id = 0, $post_type = 'post' ) {
includes/common/functions.php:function bbp_get_public_child_ids( $parent_id = 0, $post_type = 'post' ) {
includes/common/functions.php:function bbp_get_all_child_ids( $parent_id = 0, $post_type = 'post' ) {
includes/common/functions.php: * This function uses _prime_post_caches() to prepare the object cache for
includes/common/functions.php:function bbp_update_post_family_caches( $objects = array() ) {
includes/common/functions.php: * This function uses cache_users() to prepare the object cache for
includes/common/functions.php:function bbp_update_post_author_caches( $objects = array() ) {
includes/common/functions.php:function bbp_get_global_post_field( $field = 'ID', $context = 'edit' ) {
includes/common/functions.php:function bbp_verify_nonce_request( $action = '', $query_arg = '_wpnonce' ) {
includes/common/functions.php: * This function is hooked into the WordPress 'request' action and is
includes/common/functions.php:function bbp_request_feed_trap( $query_vars = array() ) {
includes/common/functions.php:function bbp_get_page_by_path( $path = '' ) {
includes/common/functions.php:function bbp_set_404( $query = null ) {
includes/common/functions.php:function bbp_set_200() {
includes/common/functions.php:function bbp_pre_handle_404( $override = false, $wp_query = false ) {
includes/common/functions.php:function bbp_posts_pre_query( $posts = null, $wp_query = false ) {
includes/common/functions.php:function bbp_get_url_scheme() {
includes/common/functions.php:function bbp_is_title_too_long( $title = '' ) {
includes/common/shortcodes.php:	public function __construct() {
includes/common/shortcodes.php:	private function setup_globals() {
includes/common/shortcodes.php:	private function add_shortcodes() {
includes/common/shortcodes.php:		foreach ( (array) $this->codes as $code => $function ) {
includes/common/shortcodes.php:			add_shortcode( $code, $function );
includes/common/shortcodes.php:	private function unset_globals() {
includes/common/shortcodes.php:	private function start( $query_name = '' ) {
includes/common/shortcodes.php:	private function end() {
includes/common/shortcodes.php:	public function display_forum_index() {
includes/common/shortcodes.php:	public function display_forum( $attr, $content = '' ) {
includes/common/shortcodes.php:	public function display_forum_form() {
includes/common/shortcodes.php:	public function display_topic_index() {
includes/common/shortcodes.php:	public function display_topic( $attr, $content = '' ) {
includes/common/shortcodes.php:	public function display_topic_form( $attr = array(), $content = '' ) {
includes/common/shortcodes.php:	public function display_reply( $attr, $content = '' ) {
includes/common/shortcodes.php:	public function display_reply_form() {
includes/common/shortcodes.php:	public function display_topic_tags() {
includes/common/shortcodes.php:	public function display_topics_of_tag( $attr, $content = '' ) {
includes/common/shortcodes.php:	public function display_topic_tag_form() {
includes/common/shortcodes.php:	public function display_view( $attr, $content = '' ) {
includes/common/shortcodes.php:	public function display_search_form() {
includes/common/shortcodes.php:	public function display_search( $attr, $content = '' ) {
includes/common/shortcodes.php:	public function display_login() {
includes/common/shortcodes.php:	public function display_register() {
includes/common/shortcodes.php:	public function display_lost_pass() {
includes/common/shortcodes.php:	public function display_stats() {
includes/common/shortcodes.php:	public function display_breadcrumb() {
includes/common/shortcodes.php:	public function display_topic_index_query( $args = array() ) {
includes/common/shortcodes.php:	public function display_topics_of_tag_query( $args = array() ) {
includes/common/widgets.php:	public function __construct() {
includes/common/widgets.php:	public static function register_widget() {
includes/common/widgets.php:	public function widget( $args = array(), $instance = array() ) {
includes/common/widgets.php:	public function update( $new_instance, $old_instance ) {
includes/common/widgets.php:	public function form( $instance = array() ) {
includes/common/widgets.php:	public function parse_settings( $instance = array() ) {
includes/common/widgets.php:	public function __construct() {
includes/common/widgets.php:	public static function register_widget() {
includes/common/widgets.php:	public function widget( $args = array(), $instance = array() ) {
includes/common/widgets.php:	public function update( $new_instance = array(), $old_instance = array() ) {
includes/common/widgets.php:	public function form( $instance = array() ) {
includes/common/widgets.php:	public function parse_settings( $instance = array() ) {
includes/common/widgets.php:	public function __construct() {
includes/common/widgets.php:	public static function register_widget() {
includes/common/widgets.php:	public function widget( $args, $instance ) {
includes/common/widgets.php:	public function update( $new_instance, $old_instance ) {
includes/common/widgets.php:	public function form( $instance ) {
includes/common/widgets.php:	public function parse_settings( $instance = array() ) {
includes/common/widgets.php:	public function __construct() {
includes/common/widgets.php:	public static function register_widget() {
includes/common/widgets.php:	public function widget( $args, $instance ) {
includes/common/widgets.php:	public function update( $new_instance, $old_instance ) {
includes/common/widgets.php:	public function form( $instance ) {
includes/common/widgets.php:	public function parse_settings( $instance = array() ) {
includes/common/widgets.php:	public function __construct() {
includes/common/widgets.php:	public static function register_widget() {
includes/common/widgets.php:	public function widget( $args = array(), $instance = array() ) {
includes/common/widgets.php:	public function update( $new_instance = array(), $old_instance = array() ) {
includes/common/widgets.php:	public function form( $instance = array() ) {
includes/common/widgets.php:	public function parse_settings( $instance = array() ) {
includes/common/widgets.php:	public function __construct() {
includes/common/widgets.php:	public static function register_widget() {
includes/common/widgets.php:	public function widget( $args = array(), $instance = array() ) {
includes/common/widgets.php:	public function update( $new_instance, $old_instance ) {
includes/common/widgets.php:	public function form( $instance ) {
includes/common/widgets.php:	public function parse_settings( $instance = array() ) {
includes/common/widgets.php:	public function __construct() {
includes/common/widgets.php:	public static function register_widget() {
includes/common/widgets.php:	public function widget( $args, $instance ) {
includes/common/widgets.php:	public function update( $new_instance = array(), $old_instance = array() ) {
includes/common/widgets.php:	public function form( $instance = array() ) {
includes/common/widgets.php:	public function parse_settings( $instance = array() ) {
includes/common/formatting.php:function bbp_kses_allowed_tags() {
includes/common/formatting.php:function bbp_filter_kses( $data = '' ) {
includes/common/formatting.php:function bbp_kses_data( $data = '' ) {
includes/common/formatting.php:function bbp_code_trick( $content = '' ) {
includes/common/formatting.php:function bbp_code_trick_reverse( $content = '' ) {
includes/common/formatting.php:function bbp_encode_bad( $content = '' ) {
includes/common/formatting.php:function bbp_encode_callback( $matches = array() ) {
includes/common/formatting.php:function bbp_decode_callback( $matches = array() ) {
includes/common/formatting.php:function bbp_encode_empty_callback( &$content = '', $key = '', $preg = '' ) {
includes/common/formatting.php:function bbp_encode_normal_callback( &$content = '', $key = '', $preg = '') {
includes/common/formatting.php:function bbp_rel_nofollow( $text = '' ) {
includes/common/formatting.php:function bbp_rel_nofollow_callback( $matches = array() ) {
includes/common/formatting.php:function bbp_make_clickable( $text = '' ) {
includes/common/formatting.php:function bbp_make_urls_clickable( $text = '' ) {
includes/common/formatting.php:function bbp_make_ftps_clickable( $text = '' ) {
includes/common/formatting.php:function bbp_make_emails_clickable( $text = '' ) {
includes/common/formatting.php:function bbp_make_mentions_clickable( $text = '' ) {
includes/common/formatting.php:function bbp_make_mentions_clickable_callback( $matches = array() ) {
includes/common/formatting.php:function bbp_number_not_negative( $number = 0 ) {
includes/common/formatting.php:function bbp_number_format( $number = 0, $decimals = false, $dec_point = '.', $thousands_sep = ',' ) {
includes/common/formatting.php:function bbp_number_format_i18n( $number = 0, $decimals = false ) {
includes/common/formatting.php:function bbp_convert_date( $time, $d = 'U', $translate = false ) {
includes/common/formatting.php:function bbp_time_since( $older_date, $newer_date = false, $gmt = false ) {
includes/common/formatting.php:	function bbp_get_time_since( $older_date, $newer_date = false, $gmt = false ) {
includes/common/formatting.php:function bbp_format_revision_reason( $reason = '' ) {
includes/common/formatting.php:function bbp_format_user_display_name( $display_name = '' ) {
includes/common/formatting.php:	// Fallback to function that (deprecated in PHP8.2)
includes/common/ajax.php:function bbp_ajax_url() {
includes/common/ajax.php:	function bbp_get_ajax_url() {
includes/common/ajax.php:function bbp_is_ajax() {
includes/common/ajax.php:function bbp_do_ajax( $action = '' ) {
includes/common/ajax.php:function bbp_ajax_headers() {
includes/common/ajax.php:function bbp_ajax_response( $success = false, $content = '', $status = -1, $extras = array() ) {
includes/common/locks.php:function bbp_check_post_lock( $post_id = 0 ) {
includes/common/locks.php:function bbp_set_post_lock( $post_id = 0 ) {
includes/common/engagements.php:function bbp_user_engagements_interface( $rel_key = '', $rel_type = 'post' ) {
includes/common/engagements.php:	public function add_user_to_object( $object_id = 0, $user_id = 0, $meta_key = '', $meta_type = 'post', $unique = false ) {
includes/common/engagements.php:	public function remove_user_from_object( $object_id = 0, $user_id = 0, $meta_key = '', $meta_type = 'post' ) {
includes/common/engagements.php:	public function remove_user_from_all_objects( $user_id = 0, $meta_key = '', $meta_type = 'post' ) {
includes/common/engagements.php:	public function remove_object_from_all_users( $object_id = 0, $meta_key = '', $meta_type = 'post' ) {
includes/common/engagements.php:	public function remove_all_users_from_all_objects( $meta_key = '', $meta_type = 'post' ) {
includes/common/engagements.php:	public function get_users_for_object( $object_id = 0, $meta_key = '', $meta_type = 'post' ) {
includes/common/engagements.php:	public function get_query( $args = array(), $context_key = '', $meta_key = '', $meta_type = 'post' ) {
includes/common/engagements.php:	public function add_user_to_object( $object_id = 0, $user_id = 0, $meta_key = '', $meta_type = 'post', $unique = false ) {
includes/common/engagements.php:	public function remove_user_from_object( $object_id = 0, $user_id = 0, $meta_key = '', $meta_type = 'post' ) {
includes/common/engagements.php:	public function remove_user_from_all_objects( $user_id = 0, $meta_key = '', $meta_type = 'post' ) {
includes/common/engagements.php:	public function remove_object_from_all_users( $object_id = 0, $meta_key = '', $meta_type = 'post' ) {
includes/common/engagements.php:	public function remove_all_users_from_all_objects( $meta_key = '', $meta_type = 'post' ) {
includes/common/engagements.php:	public function get_users_for_object( $object_id = 0, $meta_key = '', $meta_type = 'post' ) {
includes/common/engagements.php:	public function get_query( $args = array(), $context_key = '', $meta_key = '', $meta_type = 'post' ) {
includes/common/engagements.php:	private function jit_taxonomy( $tax_key = '', $object_type = 'user' ) {
includes/common/engagements.php:	public function add_user_to_object( $object_id = 0, $user_id = 0, $meta_key = '', $meta_type = 'post', $unique = false ) {
includes/common/engagements.php:	public function remove_user_from_object( $object_id = 0, $user_id = 0, $meta_key = '', $meta_type = 'post' ) {
includes/common/engagements.php:	public function remove_user_from_all_objects( $user_id = 0, $meta_key = '', $meta_type = 'post' ) {
includes/common/engagements.php:	public function remove_object_from_all_users( $object_id = 0, $meta_key = '', $meta_type = 'post' ) {
includes/common/engagements.php:	public function remove_all_users_from_all_objects( $meta_key = '', $meta_type = 'post' ) {
includes/common/engagements.php:	public function get_users_for_object( $object_id = 0, $meta_key = '', $meta_type = 'post' ) {
includes/common/engagements.php:	public function get_query( $args = array(), $context_key = '', $meta_key = '', $meta_type = 'post' ) {
includes/common/engagements.php:	 * Private function to map 2.6 meta keys to 2.5 user-option keys.
includes/common/engagements.php:	private function get_user_option_key( $meta_key = '', $object_id = 0, $prefix = false ) {
includes/common/engagements.php:	 * Private function to get a 2.5 compatible cache key.
includes/common/engagements.php:	private function get_cache_key( $meta_key = '', $object_id = 0 ) {
includes/common/engagements.php:	private function cache_get( $meta_key = '', $object_id = 0 ) {
includes/common/engagements.php:	private function cache_set( $meta_key = '', $object_id = 0, $user_ids = array() ) {
includes/common/engagements.php:	private function cache_delete( $meta_key = '', $object_id = 0 ) {
includes/common/engagements.php:	private function parse_comma_list( $results = '' ) {
includes/common/engagements.php:	public function add_user_to_object( $object_id = 0, $user_id = 0, $meta_key = '', $meta_type = 'post', $unique = false ) {
includes/common/engagements.php:	public function remove_user_from_object( $object_id = 0, $user_id = 0, $meta_key = '', $meta_type = 'post' ) {
includes/common/engagements.php:	public function remove_user_from_all_objects( $user_id = 0, $meta_key = '', $meta_type = 'post' ) {
includes/common/engagements.php:	public function remove_object_from_all_users( $object_id = 0, $meta_key = '', $meta_type = 'post' ) {
includes/common/engagements.php:	public function remove_all_users_from_all_objects( $meta_key = '', $meta_type = 'post' ) {
includes/common/engagements.php:	 * The database queries in this function were cached in bbPress versions
includes/common/engagements.php:	public function get_users_for_object( $object_id = 0, $meta_key = '', $meta_type = 'post' ) {
includes/common/engagements.php:	public function get_query( $args = array(), $context_key = '', $meta_key = '', $meta_type = 'post' ) {
includes/common/classes.php:	public function __construct( $args = array() ) {
includes/common/classes.php:	private function setup_globals( $args = array() ) {
includes/common/classes.php:	private function includes() {
includes/common/classes.php:	private function setup_actions() {
includes/common/classes.php:	public function register_post_types() {
includes/common/classes.php:	public function register_taxonomies() {
includes/common/classes.php:	public function add_rewrite_tags() {
includes/common/classes.php:	public function generate_rewrite_rules( $wp_rewrite ) {
includes/common/classes.php:	public function __construct() {
includes/common/classes.php:	public function start_el( &$output, $object, $depth = 0, $args = array(), $current_object_id = 0 ) {
includes/common/classes.php:	public function __construct() {
includes/common/classes.php:	public function start_lvl( &$output = '', $depth = 0, $args = array() ) {
includes/common/classes.php:	public function end_lvl( &$output = '', $depth = 0, $args = array() ) {
includes/common/classes.php:	public function display_element( $element = false, &$children_elements = array(), $max_depth = 0, $depth = 0, $args = array(), &$output = '' ) {
includes/common/classes.php:	public function start_el( &$output, $object, $depth = 0, $args = array(), $current_object_id = 0 ) {
includes/common/classes.php:	public function end_el( &$output = '', $object = false, $depth = 0, $args = array() ) {
includes/common/classes.php:	public function __construct() {
includes/common/classes.php:	public function start_el( &$output, $object, $depth = 0, $args = array(), $current_object_id = 0 ) {
includes/common/template.php:function bbp_forums_url( $path = '/' ) {
includes/common/template.php:	function bbp_get_forums_url( $path = '/' ) {
includes/common/template.php:function bbp_topics_url( $path = '/' ) {
includes/common/template.php:	function bbp_get_topics_url( $path = '/' ) {
includes/common/template.php:function bbp_head() {
includes/common/template.php:function bbp_footer() {
includes/common/template.php:function bbp_is_site_public( $site_id = 0 ) {
includes/common/template.php:function bbp_is_forum( $post_id = 0 ) {
includes/common/template.php:function bbp_is_forum_archive() {
includes/common/template.php:function bbp_is_single_forum() {
includes/common/template.php:function bbp_is_forum_edit() {
includes/common/template.php:function bbp_is_topic( $post_id = 0 ) {
includes/common/template.php:function bbp_is_single_topic() {
includes/common/template.php:function bbp_is_topic_archive() {
includes/common/template.php:function bbp_is_topic_edit() {
includes/common/template.php:function bbp_is_topic_merge() {
includes/common/template.php:function bbp_is_topic_split() {
includes/common/template.php:function bbp_is_topic_tag() {
includes/common/template.php:function bbp_is_topic_tag_edit() {
includes/common/template.php:function bbp_is_custom_post_type( $the_post = false ) {
includes/common/template.php:function bbp_is_reply( $post_id = 0 ) {
includes/common/template.php:function bbp_is_reply_edit() {
includes/common/template.php:function bbp_is_reply_move() {
includes/common/template.php:function bbp_is_single_reply() {
includes/common/template.php:function bbp_is_favorites() {
includes/common/template.php:function bbp_is_subscriptions() {
includes/common/template.php:function bbp_is_topics_created() {
includes/common/template.php:function bbp_is_replies_created() {
includes/common/template.php:function bbp_is_user_home() {
includes/common/template.php:function bbp_is_user_home_edit() {
includes/common/template.php:function bbp_is_single_user() {
includes/common/template.php:function bbp_is_single_user_edit() {
includes/common/template.php:function bbp_is_single_user_profile() {
includes/common/template.php:function bbp_is_single_user_topics() {
includes/common/template.php:function bbp_is_single_user_replies() {
includes/common/template.php:function bbp_is_single_user_engagements() {
includes/common/template.php:function bbp_is_single_view() {
includes/common/template.php:function bbp_is_search() {
includes/common/template.php:function bbp_is_search_results() {
includes/common/template.php:function bbp_is_edit() {
includes/common/template.php:function bbp_body_class( $wp_classes = array(), $custom_classes = false ) {
includes/common/template.php:function bbp_swap_no_js_body_class() {
includes/common/template.php:function bbp_has_shortcode( $text = '' ) {
includes/common/template.php:function is_bbpress() {
includes/common/template.php: * @param array $args This function supports these arguments:
includes/common/template.php:function bbp_wp_login_action( $args = array() ) {
includes/common/template.php:	 * @param array $args This function supports these arguments:
includes/common/template.php:	function bbp_get_wp_login_action( $args = array() ) {
includes/common/template.php:function bbp_redirect_to_field( $redirect_to = '' ) {
includes/common/template.php:function bbp_sanitize_val( $request = '', $input_type = 'text' ) {
includes/common/template.php:	function bbp_get_sanitize_val( $request = '', $input_type = 'text' ) {
includes/common/template.php: * Use this function to handle the tab indexing of user facing forms within a
includes/common/template.php: * template file. Calling this function will automatically increment the global
includes/common/template.php:function bbp_tab_index( $auto_increment = true ) {
includes/common/template.php:	 * Use this function to handle the tab indexing of user facing forms
includes/common/template.php:	 * within a template file. Calling this function will automatically
includes/common/template.php:	function bbp_get_tab_index( $auto_increment = true ) {
includes/common/template.php: * This helper function is in use, but it is generally considered impolite to
includes/common/template.php:function bbp_tab_index_attribute( $tab = false ) {
includes/common/template.php:	 * This helper function is in use, but it is generally considered impolite to
includes/common/template.php:	function bbp_get_tab_index_attribute( $tab = false ) {
includes/common/template.php:function bbp_dropdown( $args = array() ) {
includes/common/template.php:	 * @param array $args The function supports these args:
includes/common/template.php:	function bbp_get_dropdown( $args = array() ) {
includes/common/template.php:function bbp_forum_form_fields() {
includes/common/template.php:function bbp_topic_form_fields() {
includes/common/template.php:function bbp_reply_form_fields() {
includes/common/template.php:function bbp_edit_user_form_fields() {
includes/common/template.php:function bbp_merge_topic_form_fields() {
includes/common/template.php:function bbp_split_topic_form_fields() {
includes/common/template.php:function bbp_move_reply_form_fields() {
includes/common/template.php:function bbp_the_content( $args = array() ) {
includes/common/template.php:	function bbp_get_the_content( $args = array() ) {
includes/common/template.php:function bbp_get_tiny_mce_plugins( $plugins = array() ) {
includes/common/template.php:function bbp_get_teeny_mce_buttons( $buttons = array() ) {
includes/common/template.php:function bbp_get_quicktags_settings( $settings = array() ) {
includes/common/template.php:function bbp_view_id( $view = '' ) {
includes/common/template.php:	function bbp_get_view_id( $view = '' ) {
includes/common/template.php:function bbp_view_title( $view = '' ) {
includes/common/template.php:	function bbp_get_view_title( $view = '' ) {
includes/common/template.php:function bbp_view_url( $view = false ) {
includes/common/template.php:	function bbp_get_view_url( $view = false ) {
includes/common/template.php:function bbp_is_query_name( $name = '' ) {
includes/common/template.php:function bbp_get_query_name() {
includes/common/template.php:function bbp_set_query_name( $name = '' ) {
includes/common/template.php:function bbp_reset_query_name() {
includes/common/template.php:function bbp_title_breadcrumb( $args = array() ) {
includes/common/template.php:function bbp_breadcrumb( $args = array() ) {
includes/common/template.php:	function bbp_get_breadcrumb( $args = array() ) {
includes/common/template.php:function bbp_allowed_tags() {
includes/common/template.php:	function bbp_get_allowed_tags() {
includes/common/template.php:function bbp_template_notices() {
includes/common/template.php:function bbp_logout_link( $redirect_to = '' ) {
includes/common/template.php:	function bbp_get_logout_link( $redirect_to = '' ) {
includes/common/template.php:function bbp_title( $title = '', $sep = '&raquo;', $seplocation = '' ) {
includes/common/locale.php:function bbp_translate_user_role( $name ) {
includes/common/locale.php:function bbp_dummy_role_names() {
includes/users/functions.php:function bbp_redirect_login( $url = '', $raw_url = '', $user = '' ) {
includes/users/functions.php:function bbp_is_anonymous() {
includes/users/functions.php:function bbp_current_anonymous_user_data( $key = '' ) {
includes/users/functions.php:	function bbp_get_current_anonymous_user_data( $key = '' ) {
includes/users/functions.php:function bbp_set_current_anonymous_user_data( $anonymous_data = array() ) {
includes/users/functions.php:function bbp_current_author_ip() {
includes/users/functions.php:function bbp_current_author_ua() {
includes/users/functions.php: * @param string $action The requested action to compare this function to
includes/users/functions.php:function bbp_edit_user_handler( $action = '' ) {
includes/users/functions.php:function bbp_user_email_change_handler( $action = '' ) {
includes/users/functions.php:function bbp_edit_user_email_send_notification( $user_id = 0, $args = array() ) {
includes/users/functions.php:function bbp_user_edit_after() {
includes/users/functions.php:function bbp_get_user_topics_started( $args = array() ) {
includes/users/functions.php:function bbp_get_user_replies_created( $args = array() ) {
includes/users/functions.php: * This function is primarily used when saving object moderators
includes/users/functions.php:function bbp_get_user_ids_from_nicenames( $user_nicenames = array() ) {
includes/users/functions.php: * This function is primarily used when saving object moderators
includes/users/functions.php:function bbp_get_user_nicenames_from_ids( $user_ids = array() ) {
includes/users/functions.php:function bbp_get_user_topic_count_raw( $user_id = 0 ) {
includes/users/functions.php:function bbp_get_user_reply_count_raw( $user_id = 0 ) {
includes/users/functions.php:function bbp_bump_user_topic_count( $user_id = 0, $difference = 1 ) {
includes/users/functions.php:function bbp_bump_user_reply_count( $user_id = 0, $difference = 1 ) {
includes/users/functions.php: * Helper function used to increase (by one) the count of topics for a user when
includes/users/functions.php:function bbp_increase_user_topic_count( $topic_id = 0 ) {
includes/users/functions.php: * Helper function used to increase (by one) the count of replies for a user when
includes/users/functions.php:function bbp_increase_user_reply_count( $reply_id = 0 ) {
includes/users/functions.php: * Helper function used to decrease (by one) the count of topics for a user when
includes/users/functions.php:function bbp_decrease_user_topic_count( $topic_id = 0 ) {
includes/users/functions.php: * Helper function used to increase (by one) the count of replies for a user when
includes/users/functions.php:function bbp_decrease_user_reply_count( $reply_id = 0 ) {
includes/users/functions.php:function bbp_check_user_edit() {
includes/users/functions.php:function bbp_forum_enforce_blocked() {
includes/users/functions.php: * This somewhat monolithic function handles the escaping and sanitization of
includes/users/functions.php:function bbp_sanitize_displayed_user_field( $value = '', $field = '', $context = 'display' ) {
includes/users/functions.php:function bbp_user_maybe_convert_pass() {
includes/users/signups.php:function bbp_add_user_form_role_field() {
includes/users/signups.php:function bbp_user_add_role_to_signup_meta( $meta = array() ) {
includes/users/signups.php:function bbp_user_add_role_on_invite( $user_id = '', $role = '', $newuser_key = '' ) {
includes/users/signups.php:function bbp_user_add_role_on_register( $user_id = '' ) {
includes/users/signups.php:function bbp_user_add_role_on_activate( $user_id = 0, $password = '', $meta = array() ) {
includes/users/signups.php: * This helper function performs a number of generic checks, and encapsulates
includes/users/signups.php:function bbp_validate_signup_role( $to_validate = '' ) {
includes/users/signups.php:function bbp_validate_registration_role( $to_validate = '' ) {
includes/users/signups.php: * This function exists simply for parity with registrations, and to maintain an
includes/users/signups.php: * intentional layer of abstraction from the more generic function it uses.
includes/users/signups.php:function bbp_validate_activation_role( $to_validate = '' ) {
includes/users/engagements.php:function bbp_add_user_to_object( $object_id = 0, $user_id = 0, $rel_key = '', $rel_type = 'post', $unique = false ) {
includes/users/engagements.php:function bbp_remove_user_from_object( $object_id = 0, $user_id = 0, $rel_key = '', $rel_type = 'post' ) {
includes/users/engagements.php:function bbp_remove_user_from_all_objects( $user_id = 0, $rel_key = '', $rel_type = 'post' ) {
includes/users/engagements.php:function bbp_remove_object_from_all_users( $object_id = 0, $rel_key = '', $rel_type = 'post' ) {
includes/users/engagements.php:function bbp_remove_all_users_from_all_objects( $rel_key = '', $rel_type = 'post' ) {
includes/users/engagements.php:function bbp_get_users_for_object( $object_id = 0, $rel_key = '', $rel_type = 'post' ) {
includes/users/engagements.php:function bbp_is_object_of_user( $object_id = 0, $user_id = 0, $rel_key = '', $rel_type = 'post' ) {
includes/users/engagements.php:function bbp_get_user_object_query( $args = array(), $context = '', $rel_key = '', $rel_type = 'post' ) {
includes/users/engagements.php:function bbp_get_topic_engagements( $topic_id = 0 ) {
includes/users/engagements.php:function bbp_get_topic_engagements_raw( $topic_id = 0 ) {
includes/users/engagements.php:function bbp_get_user_engagements( $args = array() ) {
includes/users/engagements.php:function bbp_is_user_engaged( $user_id = 0, $topic_id = 0 ) {
includes/users/engagements.php: * this function. Originally both were validated, but because this function is
includes/users/engagements.php:function bbp_add_user_engagement( $user_id = 0, $topic_id = 0 ) {
includes/users/engagements.php:function bbp_remove_user_engagement( $user_id = 0, $topic_id = 0 ) {
includes/users/engagements.php:function bbp_recalculate_topic_engagements( $topic_id = 0, $force = false ) {
includes/users/engagements.php:function bbp_update_topic_engagements( $topic_id = 0 ) {
includes/users/engagements.php:function bbp_get_topic_favoriters( $topic_id = 0 ) {
includes/users/engagements.php:function bbp_get_user_favorites( $args = array() ) {
includes/users/engagements.php:function bbp_is_user_favorite( $user_id = 0, $topic_id = 0 ) {
includes/users/engagements.php: * this function. Originally both were validated, but because this function is
includes/users/engagements.php:function bbp_add_user_favorite( $user_id = 0, $topic_id = 0 ) {
includes/users/engagements.php:function bbp_remove_user_favorite( $user_id, $topic_id ) {
includes/users/engagements.php: * @param string $action The requested action to compare this function to
includes/users/engagements.php:function bbp_favorites_handler( $action = '' ) {
includes/users/engagements.php:function bbp_get_subscribers( $object_id = 0, $type = 'post' ) {
includes/users/engagements.php:function bbp_get_user_topic_subscriptions( $args = array() ) {
includes/users/engagements.php:function bbp_get_user_forum_subscriptions( $args = array() ) {
includes/users/engagements.php:function bbp_is_user_subscribed( $user_id = 0, $object_id = 0, $type = 'post' ) {
includes/users/engagements.php:function bbp_add_user_subscription( $user_id = 0, $object_id = 0, $type = 'post' ) {
includes/users/engagements.php:function bbp_remove_user_subscription( $user_id = 0, $object_id = 0, $type = 'post' ) {
includes/users/engagements.php: * @param string $action The requested action to compare this function to
includes/users/engagements.php:function bbp_subscriptions_handler( $action = '' ) {
includes/users/engagements.php:function bbp_get_user_object_ids( $args = array() ) {
includes/users/engagements.php:function bbp_get_moderator_forum_ids( $user_id = 0 ) {
includes/users/engagements.php:function bbp_get_user_engaged_topic_ids( $user_id = 0 ) {
includes/users/engagements.php:function bbp_get_user_favorites_topic_ids( $user_id = 0 ) {
includes/users/engagements.php:function bbp_get_user_subscribed_forum_ids( $user_id = 0 ) {
includes/users/engagements.php:function bbp_get_user_subscribed_topic_ids( $user_id = 0 ) {
includes/users/engagements.php:function bbp_get_user_subscriptions( $user_id = 0 ) {
includes/users/engagements.php:function bbp_get_forum_subscribers( $forum_id = 0 ) {
includes/users/engagements.php:function bbp_get_topic_subscribers( $topic_id = 0 ) {
includes/users/engagements.php:function bbp_is_user_subscribed_to_forum( $user_id = 0, $forum_id = 0 ) {
includes/users/engagements.php:function bbp_is_user_subscribed_to_topic( $user_id = 0, $topic_id = 0 ) {
includes/users/engagements.php:function bbp_remove_user_forum_subscription( $user_id = 0, $forum_id = 0 ) {
includes/users/engagements.php:function bbp_remove_user_topic_subscription( $user_id = 0, $topic_id = 0 ) {
includes/users/engagements.php:function bbp_add_user_forum_subscription( $user_id = 0, $forum_id = 0 ) {
includes/users/engagements.php: * this function. Originally both were validated, but because this function is
includes/users/engagements.php:function bbp_add_user_topic_subscription( $user_id = 0, $topic_id = 0 ) {
includes/users/engagements.php:function bbp_forum_subscriptions_handler( $action = '' ) {
includes/users/capabilities.php:function bbp_map_primary_meta_caps( $caps = array(), $cap = '', $user_id = 0, $args = array() ) {
includes/users/capabilities.php:function bbp_set_user_role( $user_id = 0, $new_role = '' ) {
includes/users/capabilities.php:function bbp_get_user_role( $user_id = 0 ) {
includes/users/capabilities.php:function bbp_get_user_blog_role( $user_id = 0 ) {
includes/users/capabilities.php: * Helper function hooked to 'bbp_profile_update' action to save or
includes/users/capabilities.php:function bbp_profile_update_role( $user_id = 0 ) {
includes/users/capabilities.php:function bbp_is_valid_role( $role = '' ) {
includes/users/capabilities.php: * This function will bail if the forum is not global in a multisite
includes/users/capabilities.php:function bbp_set_current_user_default_role() {
includes/users/capabilities.php:function bbp_get_user_role_map() {
includes/users/capabilities.php:function bbp_is_user_spammer( $user_id = 0 ) {
includes/users/capabilities.php:function bbp_make_spam_user( $user_id = 0 ) {
includes/users/capabilities.php:function bbp_make_ham_user( $user_id = 0 ) {
includes/users/capabilities.php:function bbp_is_user_deleted( $user_id = 0 ) {
includes/users/capabilities.php:function bbp_is_user_active( $user_id = 0 ) {
includes/users/capabilities.php:function bbp_is_user_inactive( $user_id = 0 ) {
includes/users/capabilities.php:function bbp_is_user_keymaster( $user_id = 0 ) {
includes/users/capabilities.php:function bbp_user_has_profile( $user_id = 0 ) {
includes/users/capabilities.php:function bbp_add_moderator( $object_id = 0, $user_id = 0, $object_type = 'post' ) {
includes/users/capabilities.php:function bbp_remove_moderator( $object_id = 0, $user_id = 0, $object_type = 'post' ) {
includes/users/capabilities.php:function bbp_get_moderator_ids( $object_id = 0, $object_type = 'post' ) {
includes/users/capabilities.php:function bbp_get_moderators( $object_id = 0, $object_type = 'post' ) {
includes/users/options.php:function bbp_get_default_user_options() {
includes/users/options.php:function bbp_add_user_options( $user_id = 0 ) {
includes/users/options.php:function bbp_delete_user_options( $user_id = 0 ) {
includes/users/options.php:function bbp_setup_user_option_filters() {
includes/users/options.php:function bbp_filter_get_user_option( $value = false, $option = '', $user = 0 ) {
includes/users/options.php:function bbp_update_user_topic_count( $user_id = 0, $count = false ) {
includes/users/options.php:function bbp_update_user_reply_count( $user_id = 0, $count = false ) {
includes/users/options.php:function bbp_user_topic_count( $user_id = 0, $integer = false ) {
includes/users/options.php:	function bbp_get_user_topic_count( $user_id = 0, $integer = false ) {
includes/users/options.php:function bbp_user_reply_count( $user_id = 0, $integer = false ) {
includes/users/options.php:	function bbp_get_user_reply_count( $user_id = 0, $integer = false ) {
includes/users/options.php:function bbp_user_post_count( $user_id = 0, $integer = false ) {
includes/users/options.php:	function bbp_get_user_post_count( $user_id = 0, $integer = false ) {
includes/users/options.php:function bbp_update_user_last_posted( $user_id = 0, $time = 0 ) {
includes/users/options.php:function bbp_user_last_posted( $user_id = 0 ) {
includes/users/options.php:	function bbp_get_user_last_posted( $user_id = 0 ) {
includes/users/template.php:	public function __construct( $query = null ) {
includes/users/template.php:	public function next_user() {
includes/users/template.php:	public function the_user() {
includes/users/template.php:	public function have_users() {
includes/users/template.php:	public function rewind_users() {
includes/users/template.php:function bbp_has_users( $args = array() ) {
includes/users/template.php:function bbp_users() {
includes/users/template.php:function bbp_the_user() {
includes/users/template.php:function bbp_user_id( $user_id = 0, $displayed_user_fallback = true, $current_user_fallback = false ) {
includes/users/template.php:	function bbp_get_user_id( $user_id = 0, $displayed_user_fallback = true, $current_user_fallback = false ) {
includes/users/template.php:function bbp_current_user_id() {
includes/users/template.php:	function bbp_get_current_user_id() {
includes/users/template.php:function bbp_displayed_user_id() {
includes/users/template.php:	function bbp_get_displayed_user_id() {
includes/users/template.php: * This function relies on the $filter parameter to decide how to sanitize
includes/users/template.php:function bbp_displayed_user_field( $field = '', $filter = 'display' ) {
includes/users/template.php:	 * This function relies on the $filter parameter to decide how to sanitize
includes/users/template.php:	function bbp_get_displayed_user_field( $field = '', $filter = 'display' ) {
includes/users/template.php:function bbp_current_user_name() {
includes/users/template.php:	function bbp_get_current_user_name() {
includes/users/template.php:function bbp_current_user_avatar( $size = 40 ) {
includes/users/template.php:	function bbp_get_current_user_avatar( $size = 40 ) {
includes/users/template.php:function bbp_user_profile_link( $user_id = 0 ) {
includes/users/template.php:	function bbp_get_user_profile_link( $user_id = 0 ) {
includes/users/template.php:function bbp_user_nicename( $user_id = 0, $args = array() ) {
includes/users/template.php:	function bbp_get_user_nicename( $user_id = 0, $args = array() ) {
includes/users/template.php:function bbp_user_profile_url( $user_id = 0, $user_nicename = '' ) {
includes/users/template.php:	function bbp_get_user_profile_url( $user_id = 0, $user_nicename = '' ) {
includes/users/template.php:function bbp_user_profile_edit_link( $user_id = 0 ) {
includes/users/template.php:	function bbp_get_user_profile_edit_link( $user_id = 0 ) {
includes/users/template.php:function bbp_user_profile_edit_url( $user_id = 0, $user_nicename = '' ) {
includes/users/template.php:	function bbp_get_user_profile_edit_url( $user_id = 0, $user_nicename = '' ) {
includes/users/template.php:function bbp_user_display_role( $user_id = 0 ) {
includes/users/template.php:	function bbp_get_user_display_role( $user_id = 0 ) {
includes/users/template.php:function bbp_admin_link( $args = array() ) {
includes/users/template.php:	 * @param array $args Optional. This function supports these arguments:
includes/users/template.php:	function bbp_get_admin_link( $args = array() ) {
includes/users/template.php:function bbp_author_ip( $args = array() ) {
includes/users/template.php:	function bbp_get_author_ip( $args = array() ) {
includes/users/template.php:function bbp_get_fallback_display_name( $object_id = 0 ) {
includes/users/template.php: * Convenience function to ensure proper template functions are called
includes/users/template.php:function bbp_author_display_name( $post_id = 0 ) {
includes/users/template.php:	 * Convenience function to ensure proper template functions are called
includes/users/template.php:	function bbp_get_author_display_name( $post_id = 0 ) {
includes/users/template.php: * Convenience function to ensure proper template functions are called
includes/users/template.php:function bbp_author_email( $post_id = 0 ) {
includes/users/template.php:	 * Convenience function to ensure proper template functions are called
includes/users/template.php:	function bbp_get_author_email( $post_id = 0 ) {
includes/users/template.php: * Convenience function to ensure proper template functions are called
includes/users/template.php:function bbp_author_url( $post_id = 0 ) {
includes/users/template.php:	 * Convenience function to ensure proper template functions are called
includes/users/template.php:	function bbp_get_author_url( $post_id = 0 ) {
includes/users/template.php:function bbp_favorites_permalink( $user_id = 0 ) {
includes/users/template.php:	function bbp_get_favorites_permalink( $user_id = 0 ) {
includes/users/template.php:function bbp_user_favorites_link( $args = array(), $user_id = 0, $wrap = true ) {
includes/users/template.php:	 * @param array $args This function supports these arguments:
includes/users/template.php:	function bbp_get_user_favorites_link( $args = array(), $user_id = 0, $wrap = true ) {
includes/users/template.php:function bbp_subscriptions_permalink( $user_id = 0 ) {
includes/users/template.php:	function bbp_get_subscriptions_permalink( $user_id = 0 ) {
includes/users/template.php:function bbp_user_subscribe_link( $args = array(), $user_id = 0, $wrap = true ) {
includes/users/template.php:	 * @param array $args This function supports these arguments:
includes/users/template.php:	function bbp_get_user_subscribe_link( $args = array(), $user_id = 0, $wrap = true ) {
includes/users/template.php:function bbp_notice_edit_user_success() {
includes/users/template.php:function bbp_notice_edit_user_pending_email() {
includes/users/template.php:function bbp_notice_edit_user_is_super_admin() {
includes/users/template.php:function bbp_edit_user_display_name() {
includes/users/template.php:function bbp_edit_user_blog_role() {
includes/users/template.php:function bbp_edit_user_forums_role() {
includes/users/template.php:function bbp_edit_user_contact_methods() {
includes/users/template.php:function bbp_edit_user_language( $args = array() ) {
includes/users/template.php:function bbp_user_topics_created_url( $user_id = 0 ) {
includes/users/template.php:	function bbp_get_user_topics_created_url( $user_id = 0 ) {
includes/users/template.php:function bbp_user_replies_created_url( $user_id = 0 ) {
includes/users/template.php:	function bbp_get_user_replies_created_url( $user_id = 0 ) {
includes/users/template.php:function bbp_user_engagements_url( $user_id = 0 ) {
includes/users/template.php:	function bbp_get_user_engagements_url( $user_id = 0 ) {
includes/users/template.php:function bbp_user_languages_dropdown( $args = array() ) {
includes/users/template.php:	function bbp_get_user_languages_dropdown( $args = array() ) {
includes/users/template.php:function bbp_login_notices() {
includes/users/template.php:function bbp_logged_in_redirect( $url = '' ) {
includes/users/template.php:function bbp_user_login_fields() {
includes/users/template.php:function bbp_user_register_fields() {
includes/users/template.php:function bbp_user_lost_pass_fields() {
includes/users/template.php:function bbp_author_link( $args = array() ) {
includes/users/template.php:	function bbp_get_author_link( $args = array() ) {
includes/users/template.php:function bbp_user_can_view_forum( $args = array() ) {
includes/users/template.php:function bbp_current_user_can_publish_topics() {
includes/users/template.php:function bbp_current_user_can_publish_forums() {
includes/users/template.php:function bbp_current_user_can_publish_replies() {
includes/users/template.php:function bbp_get_forums_for_current_user( $args = array() ) {
includes/users/template.php:function bbp_current_user_can_access_create_forum_form() {
includes/users/template.php:function bbp_current_user_can_access_create_topic_form() {
includes/users/template.php:function bbp_current_user_can_access_create_reply_form() {
includes/users/template.php:function bbp_current_user_can_access_anonymous_user_form() {
includes/users/template.php:function bbp_moderator_list( $forum_id = 0, $args = array() ) {
includes/users/template.php:	 * @param array $args     This function supports these arguments:
includes/users/template.php:	function bbp_get_moderator_list( $object_id = 0, $args = array() ) {
includes/topics/functions.php: * for the topic to function properly.
includes/topics/functions.php:function bbp_insert_topic( $topic_data = array(), $topic_meta = array() ) {
includes/topics/functions.php: * @param string $action The requested action to compare this function to
includes/topics/functions.php:function bbp_new_topic_handler( $action = '' ) {
includes/topics/functions.php: * @param string $action The requested action to compare this function to
includes/topics/functions.php:function bbp_edit_topic_handler( $action = '' ) {
includes/topics/functions.php:function bbp_update_topic( $topic_id = 0, $forum_id = 0, $anonymous_data = array(), $author_id = 0, $is_edit = false ) {
includes/topics/functions.php: * function can be costly to run but is necessary to keep everything accurate.
includes/topics/functions.php:function bbp_update_topic_walker( $topic_id, $last_active_time = '', $forum_id = 0, $reply_id = 0, $refresh = true ) {
includes/topics/functions.php:function bbp_move_topic_handler( $topic_id, $old_forum_id, $new_forum_id ) {
includes/topics/functions.php: * @param string $action The requested action to compare this function to
includes/topics/functions.php:function bbp_merge_topic_handler( $action = '' ) {
includes/topics/functions.php:function bbp_merge_topic_count( $destination_topic_id, $source_topic_id, $source_topic_forum_id ) {
includes/topics/functions.php: * @param string $action The requested action to compare this function to
includes/topics/functions.php:function bbp_split_topic_handler( $action = '' ) {
includes/topics/functions.php:function bbp_split_topic_count( $from_reply_id, $source_topic_id, $destination_topic_id ) {
includes/topics/functions.php: * @param string $action The requested action to compare this function to
includes/topics/functions.php:function bbp_edit_topic_tag_handler( $action = '' ) {
includes/topics/functions.php:function bbp_get_topic_statuses( $topic_id = 0 ) {
includes/topics/functions.php:function bbp_get_topic_types( $topic_id = 0 ) {
includes/topics/functions.php:function bbp_get_topic_toggles( $topic_id = 0 ) {
includes/topics/functions.php:function bbp_get_public_topic_statuses() {
includes/topics/functions.php:function bbp_get_non_public_topic_statuses() {
includes/topics/functions.php:function bbp_get_stickies( $forum_id = 0 ) {
includes/topics/functions.php:function bbp_get_super_stickies() {
includes/topics/functions.php: * @param string $action The requested action to compare this function to
includes/topics/functions.php:function bbp_toggle_topic_handler( $action = '' ) {
includes/topics/functions.php: * This function is used by `bbp_toggle_topic_handler()` to do the actual heavy
includes/topics/functions.php: * within that context, so if you need to call this function directly, make sure
includes/topics/functions.php:function bbp_toggle_topic( $args = array() ) {
includes/topics/functions.php:function bbp_remove_topic_from_all_favorites( $topic_id = 0 ) {
includes/topics/functions.php:function bbp_remove_topic_from_all_subscriptions( $topic_id = 0 ) {
includes/topics/functions.php:function bbp_bump_topic_reply_count( $topic_id = 0, $difference = 1 ) {
includes/topics/functions.php:function bbp_increase_topic_reply_count( $topic_id = 0 ) {
includes/topics/functions.php:function bbp_decrease_topic_reply_count( $topic_id = 0 ) {
includes/topics/functions.php:function bbp_bump_topic_reply_count_hidden( $topic_id = 0, $difference = 1 ) {
includes/topics/functions.php:function bbp_increase_topic_reply_count_hidden( $topic_id = 0 ) {
includes/topics/functions.php:function bbp_decrease_topic_reply_count_hidden( $topic_id = 0 ) {
includes/topics/functions.php:function bbp_insert_topic_update_counts( $topic_id = 0, $forum_id = 0 ) {
includes/topics/functions.php:function bbp_update_topic_forum_id( $topic_id = 0, $forum_id = 0 ) {
includes/topics/functions.php:function bbp_update_topic_topic_id( $topic_id = 0 ) {
includes/topics/functions.php:function bbp_update_topic_reply_count( $topic_id = 0, $reply_count = false ) {
includes/topics/functions.php:function bbp_update_topic_reply_count_hidden( $topic_id = 0, $reply_count = false ) {
includes/topics/functions.php:function bbp_update_topic_last_active_id( $topic_id = 0, $active_id = 0 ) {
includes/topics/functions.php:function bbp_update_topic_last_active_time( $topic_id = 0, $new_time = '' ) {
includes/topics/functions.php:function bbp_update_topic_last_reply_id( $topic_id = 0, $reply_id = 0 ) {
includes/topics/functions.php:function bbp_update_topic_voice_count( $topic_id = 0 ) {
includes/topics/functions.php:function bbp_update_topic_anonymous_reply_count( $topic_id = 0 ) {
includes/topics/functions.php:function bbp_update_topic_revision_log( $args = array() ) {
includes/topics/functions.php:function bbp_close_topic( $topic_id = 0 ) {
includes/topics/functions.php:function bbp_open_topic( $topic_id = 0 ) {
includes/topics/functions.php:function bbp_spam_topic( $topic_id = 0 ) {
includes/topics/functions.php:function bbp_spam_topic_replies( $topic_id = 0 ) {
includes/topics/functions.php:function bbp_spam_topic_tags( $topic_id = 0 ) {
includes/topics/functions.php:function bbp_unspam_topic( $topic_id = 0 ) {
includes/topics/functions.php:function bbp_unspam_topic_replies( $topic_id = 0 ) {
includes/topics/functions.php:function bbp_unspam_topic_tags( $topic_id = 0 ) {
includes/topics/functions.php:function bbp_stick_topic( $topic_id = 0, $super = false ) {
includes/topics/functions.php:function bbp_approve_topic( $topic_id = 0 ) {
includes/topics/functions.php:function bbp_unapprove_topic( $topic_id = 0 ) {
includes/topics/functions.php:function bbp_unstick_topic( $topic_id = 0 ) {
includes/topics/functions.php: * This function is supplemental to the actual topic deletion which is
includes/topics/functions.php:function bbp_delete_topic( $topic_id = 0 ) {
includes/topics/functions.php:function bbp_delete_topic_replies( $topic_id = 0 ) {
includes/topics/functions.php: * This function is supplemental to the actual topic being trashed which is
includes/topics/functions.php:function bbp_trash_topic( $topic_id = 0 ) {
includes/topics/functions.php:function bbp_trash_topic_replies( $topic_id = 0 ) {
includes/topics/functions.php:function bbp_untrash_topic( $topic_id = 0 ) {
includes/topics/functions.php:function bbp_untrash_topic_replies( $topic_id = 0 ) {
includes/topics/functions.php:function bbp_deleted_topic( $topic_id = 0 ) {
includes/topics/functions.php:function bbp_trashed_topic( $topic_id = 0 ) {
includes/topics/functions.php:function bbp_untrashed_topic( $topic_id = 0 ) {
includes/topics/functions.php:function bbp_get_topics_per_page( $default = 15 ) {
includes/topics/functions.php:function bbp_get_topics_per_rss_page( $default = 25 ) {
includes/topics/functions.php:function bbp_get_topic_tags( $topic_id = 0 ) {
includes/topics/functions.php:function bbp_get_topic_tag_names( $topic_id = 0, $sep = ', ' ) {
includes/topics/functions.php:function bbp_update_topic_tag_count( $terms, $taxonomy ) {
includes/topics/functions.php:function bbp_topic_content_autoembed() {
includes/topics/functions.php:function bbp_display_topics_feed_rss2( $topics_query = array() ) {
includes/topics/functions.php:function bbp_check_topic_edit() {
includes/topics/functions.php:function bbp_check_topic_tag_edit() {
includes/topics/capabilities.php:function bbp_get_topic_caps() {
includes/topics/capabilities.php:function bbp_get_topic_tag_caps() {
includes/topics/capabilities.php:function bbp_map_topic_meta_caps( $caps = array(), $cap = '', $user_id = 0, $args = array() ) {
includes/topics/capabilities.php:function bbp_map_topic_tag_meta_caps( $caps, $cap, $user_id, $args ) {
includes/topics/template.php:function bbp_topic_post_type() {
includes/topics/template.php:	function bbp_get_topic_post_type() {
includes/topics/template.php:function bbp_get_topic_post_type_labels() {
includes/topics/template.php:function bbp_get_topic_post_type_rewrite() {
includes/topics/template.php:function bbp_get_topic_post_type_supports() {
includes/topics/template.php:function bbp_show_lead_topic( $show_lead = false ) {
includes/topics/template.php:function bbp_has_topics( $args = array() ) {
includes/topics/template.php:function bbp_topics() {
includes/topics/template.php:function bbp_the_topic() {
includes/topics/template.php:function bbp_add_sticky_topics( &$query, $args = array() ) {
includes/topics/template.php:function bbp_topic_id( $topic_id = 0) {
includes/topics/template.php:	function bbp_get_topic_id( $topic_id = 0 ) {
includes/topics/template.php:function bbp_get_topic( $topic, $output = OBJECT, $filter = 'raw' ) {
includes/topics/template.php:function bbp_topic_permalink( $topic_id = 0, $redirect_to = '' ) {
includes/topics/template.php:	function bbp_get_topic_permalink( $topic_id = 0, $redirect_to = '' ) {
includes/topics/template.php:function bbp_topic_title( $topic_id = 0 ) {
includes/topics/template.php:	function bbp_get_topic_title( $topic_id = 0 ) {
includes/topics/template.php:function bbp_topic_archive_title( $title = '' ) {
includes/topics/template.php:	function bbp_get_topic_archive_title( $title = '' ) {
includes/topics/template.php:function bbp_topic_content( $topic_id = 0 ) {
includes/topics/template.php:	function bbp_get_topic_content( $topic_id = 0 ) {
includes/topics/template.php:function bbp_topic_excerpt( $topic_id = 0, $length = 100 ) {
includes/topics/template.php:	function bbp_get_topic_excerpt( $topic_id = 0, $length = 100 ) {
includes/topics/template.php:function bbp_topic_post_date( $topic_id = 0, $humanize = false, $gmt = false ) {
includes/topics/template.php:	function bbp_get_topic_post_date( $topic_id = 0, $humanize = false, $gmt = false ) {
includes/topics/template.php:function bbp_topic_pagination( $args = array() ) {
includes/topics/template.php:	 * @param array $args This function supports these arguments:
includes/topics/template.php:	function bbp_get_topic_pagination( $args = array() ) {
includes/topics/template.php:function bbp_topic_content_append_revisions( $content = '', $topic_id = 0 ) {
includes/topics/template.php:function bbp_topic_revision_log( $topic_id = 0 ) {
includes/topics/template.php:	function bbp_get_topic_revision_log( $topic_id = 0 ) {
includes/topics/template.php:		function bbp_get_topic_raw_revision_log( $topic_id = 0 ) {
includes/topics/template.php:function bbp_get_topic_revisions( $topic_id = 0 ) {
includes/topics/template.php:function bbp_get_topic_revision_count( $topic_id = 0, $integer = false ) {
includes/topics/template.php:function bbp_is_topic_sticky( $topic_id = 0, $check_super = true ) {
includes/topics/template.php:function bbp_is_topic_super_sticky( $topic_id = 0 ) {
includes/topics/template.php:function bbp_topic_status( $topic_id = 0 ) {
includes/topics/template.php:	function bbp_get_topic_status( $topic_id = 0 ) {
includes/topics/template.php:function bbp_is_topic_closed( $topic_id = 0 ) {
includes/topics/template.php:function bbp_is_topic_open( $topic_id = 0 ) {
includes/topics/template.php:function bbp_is_topic_public( $topic_id = 0 ) {
includes/topics/template.php:function bbp_is_topic_published( $topic_id = 0 ) {
includes/topics/template.php:function bbp_is_topic_spam( $topic_id = 0 ) {
includes/topics/template.php:function bbp_is_topic_trash( $topic_id = 0 ) {
includes/topics/template.php:function bbp_is_topic_pending( $topic_id = 0 ) {
includes/topics/template.php:function bbp_is_topic_private( $topic_id = 0 ) {
includes/topics/template.php:function bbp_is_topic_anonymous( $topic_id = 0 ) {
includes/topics/template.php:function bbp_topic_author( $topic_id = 0 ) {
includes/topics/template.php:	function bbp_get_topic_author( $topic_id = 0 ) {
includes/topics/template.php:function bbp_topic_author_id( $topic_id = 0 ) {
includes/topics/template.php:	function bbp_get_topic_author_id( $topic_id = 0 ) {
includes/topics/template.php:function bbp_topic_author_display_name( $topic_id = 0 ) {
includes/topics/template.php:	function bbp_get_topic_author_display_name( $topic_id = 0 ) {
includes/topics/template.php:function bbp_topic_author_avatar( $topic_id = 0, $size = 40 ) {
includes/topics/template.php:	function bbp_get_topic_author_avatar( $topic_id = 0, $size = 40 ) {
includes/topics/template.php:function bbp_topic_author_link( $args = array() ) {
includes/topics/template.php:	function bbp_get_topic_author_link( $args = array() ) {
includes/topics/template.php:function bbp_topic_author_url( $topic_id = 0 ) {
includes/topics/template.php:	function bbp_get_topic_author_url( $topic_id = 0 ) {
includes/topics/template.php:function bbp_topic_author_email( $topic_id = 0 ) {
includes/topics/template.php:	function bbp_get_topic_author_email( $topic_id = 0 ) {
includes/topics/template.php:function bbp_topic_author_role( $args = array() ) {
includes/topics/template.php:	function bbp_get_topic_author_role( $args = array() ) {
includes/topics/template.php:function bbp_topic_forum_title( $topic_id = 0 ) {
includes/topics/template.php:	function bbp_get_topic_forum_title( $topic_id = 0 ) {
includes/topics/template.php:function bbp_topic_forum_id( $topic_id = 0 ) {
includes/topics/template.php:	function bbp_get_topic_forum_id( $topic_id = 0 ) {
includes/topics/template.php:function bbp_topic_last_active_id( $topic_id = 0 ) {
includes/topics/template.php:	function bbp_get_topic_last_active_id( $topic_id = 0 ) {
includes/topics/template.php:function bbp_topic_last_active_time( $topic_id = 0 ) {
includes/topics/template.php:	function bbp_get_topic_last_active_time( $topic_id = 0 ) {
includes/topics/template.php:function bbp_topic_subscription_link( $args = array() ) {
includes/topics/template.php:	function bbp_get_topic_subscription_link( $args = array() ) {
includes/topics/template.php:function bbp_topic_favorite_link( $args = array() ) {
includes/topics/template.php:	function bbp_get_topic_favorite_link( $args = array() ) {
includes/topics/template.php:function bbp_topic_last_reply_id( $topic_id = 0 ) {
includes/topics/template.php:	function bbp_get_topic_last_reply_id( $topic_id = 0 ) {
includes/topics/template.php:function bbp_topic_last_reply_title( $topic_id = 0 ) {
includes/topics/template.php:	function bbp_get_topic_last_reply_title( $topic_id = 0 ) {
includes/topics/template.php:function bbp_topic_last_reply_permalink( $topic_id = 0 ) {
includes/topics/template.php:	function bbp_get_topic_last_reply_permalink( $topic_id = 0 ) {
includes/topics/template.php:function bbp_topic_last_reply_url( $topic_id = 0 ) {
includes/topics/template.php:	function bbp_get_topic_last_reply_url( $topic_id = 0 ) {
includes/topics/template.php:function bbp_topic_freshness_link( $topic_id = 0 ) {
includes/topics/template.php:	function bbp_get_topic_freshness_link( $topic_id = 0 ) {
includes/topics/template.php:function bbp_topic_replies_link( $topic_id = 0 ) {
includes/topics/template.php:	function bbp_get_topic_replies_link( $topic_id = 0 ) {
includes/topics/template.php:function bbp_topic_reply_count( $topic_id = 0, $integer = false ) {
includes/topics/template.php:	function bbp_get_topic_reply_count( $topic_id = 0, $integer = false ) {
includes/topics/template.php:function bbp_topic_post_count( $topic_id = 0, $integer = false ) {
includes/topics/template.php:	function bbp_get_topic_post_count( $topic_id = 0, $integer = false ) {
includes/topics/template.php:function bbp_topic_reply_count_hidden( $topic_id = 0, $integer = false ) {
includes/topics/template.php:	function bbp_get_topic_reply_count_hidden( $topic_id = 0, $integer = false ) {
includes/topics/template.php:function bbp_topic_voice_count( $topic_id = 0, $integer = false ) {
includes/topics/template.php:	function bbp_get_topic_voice_count( $topic_id = 0, $integer = false ) {
includes/topics/template.php:function bbp_topic_tag_list( $topic_id = 0, $args = array() ) {
includes/topics/template.php:	 * @param array $args This function supports these arguments:
includes/topics/template.php:	function bbp_get_topic_tag_list( $topic_id = 0, $args = array() ) {
includes/topics/template.php:function bbp_topic_class( $topic_id = 0, $classes = array() ) {
includes/topics/template.php:	function bbp_get_topic_class( $topic_id = 0, $classes = array() ) {
includes/topics/template.php:function bbp_topic_admin_links( $args = array() ) {
includes/topics/template.php:	 * @param array $args This function supports these arguments:
includes/topics/template.php:	function bbp_get_topic_admin_links( $args = array() ) {
includes/topics/template.php:function bbp_topic_edit_link( $args = array() ) {
includes/topics/template.php:	 * @param array $args This function supports these args:
includes/topics/template.php:	function bbp_get_topic_edit_link( $args = array() ) {
includes/topics/template.php:function bbp_topic_edit_url( $topic_id = 0 ) {
includes/topics/template.php:	function bbp_get_topic_edit_url( $topic_id = 0 ) {
includes/topics/template.php:function bbp_topic_trash_link( $args = array() ) {
includes/topics/template.php:	 * @param array $args This function supports these args:
includes/topics/template.php:	function bbp_get_topic_trash_link( $args = array() ) {
includes/topics/template.php:function bbp_topic_close_link( $args = array() ) {
includes/topics/template.php:	 * @param array $args This function supports these args:
includes/topics/template.php:	function bbp_get_topic_close_link( $args = array() ) {
includes/topics/template.php:function bbp_topic_approve_link( $args = array() ) {
includes/topics/template.php:	 * @param array $args This function supports these args:
includes/topics/template.php:	function bbp_get_topic_approve_link( $args = array() ) {
includes/topics/template.php:function bbp_topic_stick_link( $args = array() ) {
includes/topics/template.php:	 * @param array $args This function supports these args:
includes/topics/template.php:	function bbp_get_topic_stick_link( $args = array() ) {
includes/topics/template.php:function bbp_topic_merge_link( $args = array() ) {
includes/topics/template.php:	 * @param array $args This function supports these args:
includes/topics/template.php:	function bbp_get_topic_merge_link( $args = array() ) {
includes/topics/template.php:function bbp_topic_spam_link( $args = array() ) {
includes/topics/template.php:	 * @param array $args This function supports these args:
includes/topics/template.php:	function bbp_get_topic_spam_link( $args = array() ) {
includes/topics/template.php:function bbp_topic_reply_link( $args = array() ) {
includes/topics/template.php:	function bbp_get_topic_reply_link( $args = array() ) {
includes/topics/template.php:function bbp_get_topics_pagination_base( $forum_id = 0 ) {
includes/topics/template.php:function bbp_forum_pagination_count() {
includes/topics/template.php:	function bbp_get_forum_pagination_count() {
includes/topics/template.php:function bbp_forum_pagination_links() {
includes/topics/template.php:	function bbp_get_forum_pagination_links() {
includes/topics/template.php:function bbp_topic_notices() {
includes/topics/template.php: * @param $args This function supports these arguments:
includes/topics/template.php:function bbp_topic_type_select( $args = array() ) {
includes/topics/template.php: * @param $args This function supports these arguments:
includes/topics/template.php:function bbp_form_topic_type_dropdown( $args = array() ) {
includes/topics/template.php:	 * @param $args This function supports these arguments:
includes/topics/template.php:	function bbp_get_form_topic_type_dropdown( $args = array() ) {
includes/topics/template.php: * @param $args This function supports these arguments:
includes/topics/template.php:function bbp_form_topic_status_dropdown( $args = array() ) {
includes/topics/template.php:	 * within this function to check available topic statuses.
includes/topics/template.php:	 * @param $args This function supports these arguments:
includes/topics/template.php:	function bbp_get_form_topic_status_dropdown( $args = array() ) {
includes/topics/template.php:function bbp_single_topic_description( $args = array() ) {
includes/topics/template.php:	 * @param array $args This function supports these arguments:
includes/topics/template.php:	function bbp_get_single_topic_description( $args = array() ) {
includes/topics/template.php:function bbp_topic_tag_tax_id() {
includes/topics/template.php:	function bbp_get_topic_tag_tax_id() {
includes/topics/template.php:function bbp_get_topic_tag_tax_labels() {
includes/topics/template.php:function bbp_get_topic_tag_tax_rewrite() {
includes/topics/template.php:function bbp_topic_tag_id( $tag = '' ) {
includes/topics/template.php:	function bbp_get_topic_tag_id( $tag = '' ) {
includes/topics/template.php:function bbp_topic_tag_name( $tag = '' ) {
includes/topics/template.php:	function bbp_get_topic_tag_name( $tag = '' ) {
includes/topics/template.php:function bbp_topic_tag_slug( $tag = '' ) {
includes/topics/template.php:	function bbp_get_topic_tag_slug( $tag = '' ) {
includes/topics/template.php:function bbp_topic_tag_link( $tag = '' ) {
includes/topics/template.php:	function bbp_get_topic_tag_link( $tag = '' ) {
includes/topics/template.php:function bbp_topic_tag_edit_link( $tag = '' ) {
includes/topics/template.php:	function bbp_get_topic_tag_edit_link( $tag = '' ) {
includes/topics/template.php:function bbp_topic_tag_description( $args = array() ) {
includes/topics/template.php:	function bbp_get_topic_tag_description( $args = array() ) {
includes/topics/template.php:function bbp_form_topic_title() {
includes/topics/template.php:	function bbp_get_form_topic_title() {
includes/topics/template.php:function bbp_form_topic_content() {
includes/topics/template.php:	function bbp_get_form_topic_content() {
includes/topics/template.php:function bbp_topic_row_actions() {
includes/topics/template.php:function bbp_form_topic_tags() {
includes/topics/template.php:	function bbp_get_form_topic_tags() {
includes/topics/template.php:function bbp_form_topic_forum() {
includes/topics/template.php:	function bbp_get_form_topic_forum() {
includes/topics/template.php:function bbp_form_topic_subscribed() {
includes/topics/template.php:	function bbp_get_form_topic_subscribed() {
includes/topics/template.php:function bbp_form_topic_log_edit() {
includes/topics/template.php:	function bbp_get_form_topic_log_edit() {
includes/topics/template.php:function bbp_form_topic_edit_reason() {
includes/topics/template.php:	function bbp_get_form_topic_edit_reason() {
includes/topics/template.php:function bbp_is_topic_form_post_request() {
includes/topics/template.php:function bbp_show_topic_lock_alert() {
includes/topics/template.php:function bbp_topic_lock_description( $topic_id = 0 ) {
includes/topics/template.php:	function bbp_get_topic_lock_description( $topic_id = 0 ) {
templates/default/bbpress-functions.php:	public function __construct( $properties = array() ) {
templates/default/bbpress-functions.php:	private function setup_actions() {
templates/default/bbpress-functions.php:	public function before_main_content() {
templates/default/bbpress-functions.php:	public function after_main_content() {
templates/default/bbpress-functions.php:	public function enqueue_styles() {
templates/default/bbpress-functions.php:	public function enqueue_scripts() {
templates/default/bbpress-functions.php:	public function localize_topic_script() {
templates/default/bbpress-functions.php:	public function ajax_favorite() {
templates/default/bbpress-functions.php:	public function ajax_subscription() {
bbpress.php:	public static function instance() {
bbpress.php:	private function __construct() { /* Do nothing here */ }
bbpress.php:	public function __clone() { _doing_it_wrong( __FUNCTION__, __( 'Cheatin&#8217; huh?', 'bbpress' ), '2.1' ); }
bbpress.php:	public function __wakeup() { _doing_it_wrong( __FUNCTION__, __( 'Cheatin&#8217; huh?', 'bbpress' ), '2.1' ); }
bbpress.php:	public function __isset( $key ) { return isset( $this->data[ $key ] ); }
bbpress.php:	public function __get( $key ) { return isset( $this->data[ $key ] ) ? $this->data[ $key ] : null; }
bbpress.php:	public function __set( $key , $value ) { $this->data[ $key ] = $value; }
bbpress.php:	public function __unset( $key ) {
bbpress.php:	public function __call( $name = '', $args = array() ) { unset( $name, $args ); return null; }
bbpress.php:	private function setup_environment() {
bbpress.php:	private function setup_variables() {
bbpress.php:	private function includes() {
bbpress.php:	private function setup_actions() {
bbpress.php:	public function register_theme_packages() {
bbpress.php:	public function setup_theme() {
bbpress.php:	public function load_textdomain() {
bbpress.php:	public static function register_post_types() {
bbpress.php:	public static function register_post_statuses() {
bbpress.php:	public static function register_taxonomies() {
bbpress.php:	public static function register_views() {
bbpress.php:	public function register_shortcodes() {
bbpress.php:	public function register_meta() {
bbpress.php:	public function setup_current_user() {
bbpress.php:	public function setup_engagements() {
bbpress.php:	public function roles_init() {
bbpress.php:	public static function add_rewrite_tags() {
bbpress.php:	public static function add_rewrite_rules() {
bbpress.php:	public static function add_permastructs() {
bbpress.php: * The main function responsible for returning the one true bbPress Instance
bbpress.php: * Use this function like you would a global variable, except without needing
bbpress.php:function bbpress() {
